#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å —Ä–µ–∞–ª—å–Ω—ã–º PNG –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
"""

import requests
import json
import base64
from datetime import datetime

# URL —Å–µ—Ä–≤–µ—Ä–∞
SERVER_URL = "https://lms-feedback-server.onrender.com"

# –°–æ–∑–¥–∞–µ–º –Ω–∞—Å—Ç–æ—è—â–µ–µ PNG –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–∫—Ä–∞—Å–Ω—ã–π –∫–≤–∞–¥—Ä–∞—Ç 10x10)
def create_real_png():
    # –ù–∞—Å—Ç–æ—è—â–∏–π PNG —Ñ–∞–π–ª - –∫—Ä–∞—Å–Ω—ã–π –∫–≤–∞–¥—Ä–∞—Ç 10x10 –ø–∏–∫—Å–µ–ª–µ–π
    png_hex = """
    89504e470d0a1a0a0000000d49484452000000640000006408020000
    00ff80020300000017494441547801edc1010d000000c2a0f74f6d0e
    37a00000000000000000be0d21000001ff199c0000000049454e44ae
    426082
    """
    # –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã –∏ –ø–µ—Ä–µ–≤–æ–¥—ã —Å—Ç—Ä–æ–∫
    png_hex = png_hex.replace('\n', '').replace(' ', '')
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º hex –≤ bytes
    png_bytes = bytes.fromhex(png_hex)
    # –ö–æ–¥–∏—Ä—É–µ–º –≤ base64
    return base64.b64encode(png_bytes).decode('utf-8')

# –î–∞–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤–∞
feedback_data = {
    "type": "bug",
    "text": f"–¢–µ—Å—Ç —Å —Ä–µ–∞–ª—å–Ω—ã–º PNG –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º ({datetime.now().strftime('%H:%M:%S')})",
    "userEmail": "test@example.com",
    "userName": "Test User",
    "deviceInfo": {
        "model": "iPhone 15 Pro",
        "osVersion": "iOS 17.5",
        "appVersion": "2.0.2",
        "buildNumber": "100",
        "locale": "ru-RU",
        "screenSize": "390x844"
    },
    "timestamp": datetime.now().isoformat(),
    "screenshot": create_real_png()
}

print("üñºÔ∏è  –¢–µ—Å—Ç —Å —Ä–µ–∞–ª—å–Ω—ã–º PNG –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º")
print("=" * 50)
print(f"üìè –†–∞–∑–º–µ—Ä base64: {len(feedback_data['screenshot'])} —Å–∏–º–≤–æ–ª–æ–≤")

# –û—Ç–ø—Ä–∞–≤–∫–∞
try:
    response = requests.post(
        f"{SERVER_URL}/api/v1/feedback",
        json=feedback_data,
        headers={"Content-Type": "application/json"},
        timeout=30
    )
    
    print(f"\nüì• –°—Ç–∞—Ç—É—Å: {response.status_code}")
    
    if response.status_code in [200, 201]:
        result = response.json()
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ!")
        
        if result.get('github_issue'):
            print(f"\nüîó GitHub Issue: {result['github_issue']}")
            print("\n‚ö° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ issue - –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∑–∞–≥—Ä—É–∂–µ–Ω–æ —á–µ—Ä–µ–∑ Imgur!")
        else:
            print(f"\n‚ùå GitHub Issue –Ω–µ —Å–æ–∑–¥–∞–Ω")
            print(f"–û—Ç–≤–µ—Ç: {json.dumps(result, indent=2)}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
        
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}") 