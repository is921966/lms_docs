#!/bin/bash
# Pre-commit hook –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è TDD compliance
# –í–µ—Ä—Å–∏—è: 2.0.0
# –î–∞—Ç–∞: 2025-07-07

echo "üîç Pre-commit TDD Compliance Check..."
echo "=================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 1: –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
echo -e "\nüìã –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤..."

# –î–ª—è iOS –ø—Ä–æ–µ–∫—Ç–∞
if [ -d "LMS_App/LMS" ]; then
    cd LMS_App/LMS
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã —Å —Ç–∞–π–º–∞—É—Ç–æ–º
    timeout 300 xcodebuild test \
        -scheme LMS \
        -destination 'platform=iOS Simulator,name=iPhone 16 Pro' \
        -quiet \
        2>&1 | grep -E "Test Suite.*passed|Test Suite.*failed|Executed"
    
    TEST_RESULT=$?
    
    if [ $TEST_RESULT -ne 0 ]; then
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê: –ï—Å—Ç—å –ø–∞–¥–∞—é—â–∏–µ —Ç–µ—Å—Ç—ã!${NC}"
        echo -e "${RED}–ö–æ–º–º–∏—Ç –æ—Ç–∫–ª–æ–Ω–µ–Ω. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –≤—Å–µ –∫—Ä–∞—Å–Ω—ã–µ —Ç–µ—Å—Ç—ã –ø–µ—Ä–µ–¥ –∫–æ–º–º–∏—Ç–æ–º.${NC}"
        exit 1
    fi
    
    cd ../..
fi

# –î–ª—è PHP –ø—Ä–æ–µ–∫—Ç–∞
if [ -f "phpunit.xml" ] || [ -f "phpunit.xml.dist" ]; then
    echo -e "\nüìã –ó–∞–ø—É—Å–∫ PHP —Ç–µ—Å—Ç–æ–≤..."
    
    if [ -f "test-quick.sh" ]; then
        ./test-quick.sh
        TEST_RESULT=$?
    else
        vendor/bin/phpunit
        TEST_RESULT=$?
    fi
    
    if [ $TEST_RESULT -ne 0 ]; then
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê: –ï—Å—Ç—å –ø–∞–¥–∞—é—â–∏–µ PHP —Ç–µ—Å—Ç—ã!${NC}"
        echo -e "${RED}–ö–æ–º–º–∏—Ç –æ—Ç–∫–ª–æ–Ω–µ–Ω. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –≤—Å–µ –∫—Ä–∞—Å–Ω—ã–µ —Ç–µ—Å—Ç—ã –ø–µ—Ä–µ–¥ –∫–æ–º–º–∏—Ç–æ–º.${NC}"
        exit 1
    fi
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 2: –ê–Ω–∞–ª–∏–∑ –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ç–µ—Å—Ç–æ–≤
echo -e "\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ TDD compliance –¥–ª—è –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤..."

# –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
CHANGED_FILES=$(git diff --cached --name-only --diff-filter=ACM)

# –°—á–µ—Ç—á–∏–∫–∏
NEW_CODE_FILES=0
NEW_TEST_FILES=0
MISSING_TESTS=""

for file in $CHANGED_FILES; do
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª—ã —Å –∫–æ–¥–æ–º
    if [[ $file =~ \.(swift|php|js|ts)$ ]] && [[ ! $file =~ (Test|Spec)\. ]]; then
        NEW_CODE_FILES=$((NEW_CODE_FILES + 1))
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–º—è —Ç–µ—Å—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
        base_name=$(basename "$file" | sed 's/\.[^.]*$//')
        dir_name=$(dirname "$file")
        
        # –ò—â–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ç–µ—Å—Ç
        if [[ $file =~ \.swift$ ]]; then
            test_pattern="${base_name}Test.swift"
        elif [[ $file =~ \.php$ ]]; then
            test_pattern="${base_name}Test.php"
        else
            test_pattern="${base_name}.test.${file##*.}"
        fi
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–µ—Å—Ç –≤ —Ç–æ–º –∂–µ –∫–æ–º–º–∏—Ç–µ
        if ! echo "$CHANGED_FILES" | grep -q "$test_pattern"; then
            MISSING_TESTS="$MISSING_TESTS\n  - $file (–æ–∂–∏–¥–∞–µ—Ç—Å—è —Ç–µ—Å—Ç: $test_pattern)"
        fi
    elif [[ $file =~ (Test|Spec)\. ]]; then
        NEW_TEST_FILES=$((NEW_TEST_FILES + 1))
    fi
done

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 3: –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –∫–æ–¥–∞ –∏ —Ç–µ—Å—Ç–æ–≤
if [ $NEW_CODE_FILES -gt 0 ] && [ $NEW_TEST_FILES -eq 0 ]; then
    echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê: –î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π –∫–æ–¥ –±–µ–∑ —Ç–µ—Å—Ç–æ–≤!${NC}"
    echo -e "${RED}TDD —Ç—Ä–µ–±—É–µ—Ç –Ω–∞–ø–∏—Å–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤ –ü–ï–†–ï–î –∫–æ–¥–æ–º.${NC}"
    echo -e "${YELLOW}–§–∞–π–ª—ã –±–µ–∑ —Ç–µ—Å—Ç–æ–≤:$MISSING_TESTS${NC}"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 4: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ—Å—Ç–æ–≤ –≤ –¥–µ–Ω—å
if [ $NEW_TEST_FILES -gt 10 ]; then
    echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê: –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —Ç–µ—Å—Ç–æ–≤ –∑–∞ –æ–¥–∏–Ω –∫–æ–º–º–∏—Ç ($NEW_TEST_FILES)!${NC}"
    echo -e "${RED}–ú–∞–∫—Å–∏–º—É–º 10 —Ç–µ—Å—Ç–æ–≤ –≤ –¥–µ–Ω—å –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–∞.${NC}"
    echo -e "${YELLOW}–†–∞–∑–±–µ–π—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ–º–º–∏—Ç–æ–≤ —Å –ø–æ–ª–Ω—ã–º–∏ TDD —Ü–∏–∫–ª–∞–º–∏.${NC}"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ 5: TODO –∏ FIXME –≤ —Ç–µ—Å—Ç–∞—Ö
echo -e "\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã..."
TODO_COUNT=$(git diff --cached | grep -c "TODO\|FIXME\|XXX" || true)

if [ $TODO_COUNT -gt 0 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ù–∞–π–¥–µ–Ω–æ $TODO_COUNT TODO/FIXME –º–∞—Ä–∫–µ—Ä–æ–≤${NC}"
    echo -e "${YELLOW}–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã –ø–µ—Ä–µ–¥ –∫–æ–º–º–∏—Ç–æ–º.${NC}"
fi

# –£—Å–ø–µ—à–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
echo -e "\n${GREEN}‚úÖ TDD Compliance –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞!${NC}"
echo -e "${GREEN}–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:${NC}"
echo -e "  - –ù–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ —Å –∫–æ–¥–æ–º: $NEW_CODE_FILES"
echo -e "  - –ù–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ —Å —Ç–µ—Å—Ç–∞–º–∏: $NEW_TEST_FILES"
echo -e "  - –í—Å–µ —Ç–µ—Å—Ç—ã –∑–µ–ª–µ–Ω—ã–µ: –î–ê"

# –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ TDD
echo -e "\nüí° –ü–æ–º–Ω–∏—Ç–µ –æ TDD —Ü–∏–∫–ª–µ:"
echo -e "  1. ${RED}RED${NC} - –ù–∞–ø–∏—Å–∞—Ç—å –ø–∞–¥–∞—é—â–∏–π —Ç–µ—Å—Ç"
echo -e "  2. ${GREEN}GREEN${NC} - –ù–∞–ø–∏—Å–∞—Ç—å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∫–æ–¥"
echo -e "  3. ${YELLOW}REFACTOR${NC} - –£–ª—É—á—à–∏—Ç—å –∫–æ–¥"

exit 0 