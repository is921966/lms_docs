<?php

use Symfony\Component\Routing\Loader\Configurator\RoutingConfigurator;

return function (RoutingConfigurator $routes) {
    // Authentication routes (public)
    $routes->collection()
        ->prefix('/auth')
        ->namePrefix('auth.')
        ->add('login', '/login')
            ->controller('App\User\Infrastructure\Http\AuthController::login')
            ->methods(['POST'])
        ->add('ldap_login', '/ldap-login')
            ->controller('App\User\Infrastructure\Http\AuthController::ldapLogin')
            ->methods(['POST'])
        ->add('logout', '/logout')
            ->controller('App\User\Infrastructure\Http\AuthController::logout')
            ->methods(['POST'])
        ->add('refresh', '/refresh')
            ->controller('App\User\Infrastructure\Http\AuthController::refresh')
            ->methods(['POST'])
        ->add('forgot_password', '/forgot-password')
            ->controller('App\User\Infrastructure\Http\AuthController::forgotPassword')
            ->methods(['POST'])
        ->add('reset_password', '/reset-password')
            ->controller('App\User\Infrastructure\Http\AuthController::resetPassword')
            ->methods(['POST'])
        ->add('verify_email', '/verify-email/{token}')
            ->controller('App\User\Infrastructure\Http\AuthController::verifyEmail')
            ->methods(['GET'])
        ->add('verify_2fa', '/2fa/verify')
            ->controller('App\User\Infrastructure\Http\AuthController::verifyTwoFactor')
            ->methods(['POST']);
    
    // Current user routes (protected)
    $routes->collection()
        ->prefix('/me')
        ->namePrefix('me.')
        ->defaults(['_auth' => true])
        ->add('show', '')
            ->controller('App\User\Infrastructure\Http\AuthController::me')
            ->methods(['GET'])
        ->add('change_password', '/change-password')
            ->controller('App\User\Infrastructure\Http\AuthController::changePassword')
            ->methods(['POST'])
        ->add('enable_2fa', '/2fa/enable')
            ->controller('App\User\Infrastructure\Http\AuthController::enableTwoFactor')
            ->methods(['POST'])
        ->add('disable_2fa', '/2fa/disable')
            ->controller('App\User\Infrastructure\Http\AuthController::disableTwoFactor')
            ->methods(['POST']);
    
    // User management routes (protected)
    $routes->collection()
        ->prefix('/users')
        ->namePrefix('users.')
        ->defaults(['_auth' => true])
        ->add('index', '')
            ->controller('App\User\Infrastructure\Http\UserController::index')
            ->methods(['GET'])
            ->defaults(['_permission' => 'users.view'])
        ->add('store', '')
            ->controller('App\User\Infrastructure\Http\UserController::store')
            ->methods(['POST'])
            ->defaults(['_permission' => 'users.create'])
        ->add('statistics', '/statistics')
            ->controller('App\User\Infrastructure\Http\UserController::statistics')
            ->methods(['GET'])
            ->defaults(['_permission' => 'users.view'])
        ->add('import', '/import')
            ->controller('App\User\Infrastructure\Http\UserController::import')
            ->methods(['POST'])
            ->defaults(['_permission' => 'users.import'])
        ->add('export', '/export')
            ->controller('App\User\Infrastructure\Http\UserController::export')
            ->methods(['GET'])
            ->defaults(['_permission' => 'users.export'])
        ->add('show', '/{id}')
            ->controller('App\User\Infrastructure\Http\UserController::show')
            ->methods(['GET'])
            ->defaults(['_permission' => 'users.view'])
        ->add('update', '/{id}')
            ->controller('App\User\Infrastructure\Http\UserController::update')
            ->methods(['PUT'])
            ->defaults(['_permission' => 'users.update'])
        ->add('destroy', '/{id}')
            ->controller('App\User\Infrastructure\Http\UserController::destroy')
            ->methods(['DELETE'])
            ->defaults(['_permission' => 'users.delete'])
        ->add('restore', '/{id}/restore')
            ->controller('App\User\Infrastructure\Http\UserController::restore')
            ->methods(['POST'])
            ->defaults(['_permission' => 'users.restore'])
        ->add('activate', '/{id}/activate')
            ->controller('App\User\Infrastructure\Http\UserController::activate')
            ->methods(['POST'])
            ->defaults(['_permission' => 'users.update'])
        ->add('deactivate', '/{id}/deactivate')
            ->controller('App\User\Infrastructure\Http\UserController::deactivate')
            ->methods(['POST'])
            ->defaults(['_permission' => 'users.update'])
        ->add('suspend', '/{id}/suspend')
            ->controller('App\User\Infrastructure\Http\UserController::suspend')
            ->methods(['POST'])
            ->defaults(['_permission' => 'users.update'])
        ->add('reset_password', '/{id}/reset-password')
            ->controller('App\User\Infrastructure\Http\UserController::resetPassword')
            ->methods(['POST'])
            ->defaults(['_permission' => 'users.reset_password'])
        ->add('assign_roles', '/{id}/roles')
            ->controller('App\User\Infrastructure\Http\UserController::assignRoles')
            ->methods(['POST'])
            ->defaults(['_permission' => 'users.manage_roles'])
        ->add('remove_roles', '/{id}/roles')
            ->controller('App\User\Infrastructure\Http\UserController::removeRoles')
            ->methods(['DELETE'])
            ->defaults(['_permission' => 'users.manage_roles'])
        ->add('sync_roles', '/{id}/roles')
            ->controller('App\User\Infrastructure\Http\UserController::syncRoles')
            ->methods(['PUT'])
            ->defaults(['_permission' => 'users.manage_roles']);
    
    // Profile routes (protected)
    $routes->collection()
        ->prefix('/profile')
        ->namePrefix('profile.')
        ->defaults(['_auth' => true])
        ->add('show', '')
            ->controller('App\User\Infrastructure\Http\ProfileController::show')
            ->methods(['GET'])
        ->add('update', '')
            ->controller('App\User\Infrastructure\Http\ProfileController::update')
            ->methods(['PUT'])
        ->add('upload_avatar', '/avatar')
            ->controller('App\User\Infrastructure\Http\ProfileController::uploadAvatar')
            ->methods(['POST'])
        ->add('delete_avatar', '/avatar')
            ->controller('App\User\Infrastructure\Http\ProfileController::deleteAvatar')
            ->methods(['DELETE'])
        ->add('activities', '/activities')
            ->controller('App\User\Infrastructure\Http\ProfileController::activities')
            ->methods(['GET'])
        ->add('notification_preferences', '/notification-preferences')
            ->controller('App\User\Infrastructure\Http\ProfileController::notificationPreferences')
            ->methods(['GET'])
        ->add('update_notification_preferences', '/notification-preferences')
            ->controller('App\User\Infrastructure\Http\ProfileController::updateNotificationPreferences')
            ->methods(['PUT']);
    
    // LDAP management routes (protected)
    $routes->collection()
        ->prefix('/ldap')
        ->namePrefix('ldap.')
        ->defaults(['_auth' => true])
        ->add('test_connection', '/test-connection')
            ->controller('App\User\Infrastructure\Http\LdapController::testConnection')
            ->methods(['GET'])
            ->defaults(['_permission' => 'ldap.manage'])
        ->add('server_info', '/server-info')
            ->controller('App\User\Infrastructure\Http\LdapController::serverInfo')
            ->methods(['GET'])
            ->defaults(['_permission' => 'ldap.manage'])
        ->add('search_users', '/search-users')
            ->controller('App\User\Infrastructure\Http\LdapController::searchUsers')
            ->methods(['GET'])
            ->defaults(['_permission' => 'ldap.search'])
        ->add('import_user', '/import-user')
            ->controller('App\User\Infrastructure\Http\LdapController::importUser')
            ->methods(['POST'])
            ->defaults(['_permission' => 'ldap.import'])
        ->add('import_group', '/import-group')
            ->controller('App\User\Infrastructure\Http\LdapController::importGroup')
            ->methods(['POST'])
            ->defaults(['_permission' => 'ldap.import'])
        ->add('sync_all', '/sync-all')
            ->controller('App\User\Infrastructure\Http\LdapController::syncAll')
            ->methods(['POST'])
            ->defaults(['_permission' => 'ldap.sync'])
        ->add('organizational_units', '/organizational-units')
            ->controller('App\User\Infrastructure\Http\LdapController::organizationalUnits')
            ->methods(['GET'])
            ->defaults(['_permission' => 'ldap.search'])
        ->add('departments', '/departments')
            ->controller('App\User\Infrastructure\Http\LdapController::departments')
            ->methods(['GET'])
            ->defaults(['_permission' => 'ldap.search'])
        ->add('user_groups', '/users/{username}/groups')
            ->controller('App\User\Infrastructure\Http\LdapController::userGroups')
            ->methods(['GET'])
            ->defaults(['_permission' => 'ldap.search']);
}; 