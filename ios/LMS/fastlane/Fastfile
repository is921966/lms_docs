# Fastfile for LMS iOS App

default_platform(:ios)

platform :ios do
  desc "Run unit tests"
  lane :test do
    run_tests(
      scheme: "LMS",
      devices: ["iPhone 15"],
      code_coverage: true,
      xcargs: "-quiet"
    )
    
    # Check coverage threshold
    xcov(
      scheme: "LMS",
      minimum_coverage_percentage: 80.0
    )
  end
  
  desc "Build and upload to TestFlight"
  lane :beta do
    # Ensure git is clean
    ensure_git_status_clean
    
    # Increment build number
    increment_build_number(
      build_number: latest_testflight_build_number + 1
    )
    
    # Match certificates
    match(
      type: "appstore",
      readonly: true
    )
    
    # Build the app
    build_app(
      scheme: "LMS",
      clean: true,
      export_method: "app-store",
      export_options: {
        provisioningProfiles: {
          "com.company.lms" => "match AppStore com.company.lms"
        }
      }
    )
    
    # Upload to TestFlight
    upload_to_testflight(
      skip_waiting_for_build_processing: true,
      distribute_external: false,
      notify_external_testers: false,
      changelog: "Автоматическая сборка из ветки main"
    )
    
    # Commit version bump
    commit_version_bump(
      message: "Bump build number to #{get_build_number}"
    )
    
    # Push to git
    push_to_git_remote
    
    # Send notification
    slack(
      message: "Новая версия LMS iOS загружена в TestFlight! 🚀",
      success: true,
      payload: {
        "Build Number" => get_build_number,
        "Version" => get_version_number
      }
    )
  end
  
  desc "Create screenshots"
  lane :screenshots do
    capture_screenshots(
      scheme: "LMSUITests",
      devices: [
        "iPhone 15 Pro",
        "iPhone 15 Pro Max",
        "iPad Pro (12.9-inch) (6th generation)"
      ],
      languages: ["ru-RU"],
      clear_previous_screenshots: true
    )
  end
  
  desc "Submit to App Store"
  lane :release do
    # Run tests first
    test
    
    # Build and upload
    build_app(
      scheme: "LMS",
      clean: true,
      export_method: "app-store"
    )
    
    # Upload to App Store Connect
    upload_to_app_store(
      skip_metadata: false,
      skip_screenshots: false,
      submit_for_review: false,
      force: true
    )
  end
  
  desc "Setup CI environment"
  lane :setup_ci do
    setup_ci(
      provider: "travis",
      force: true
    )
    
    # Create keychain for CI
    create_keychain(
      name: "CI_Keychain",
      password: ENV["MATCH_KEYCHAIN_PASSWORD"],
      default_keychain: true,
      unlock: true,
      timeout: 3600,
      add_to_search_list: true
    )
  end
end 