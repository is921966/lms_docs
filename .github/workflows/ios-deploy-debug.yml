name: iOS Deploy Debug

on:
  workflow_dispatch:
  push:
    branches: [ master ]

env:
  WORKSPACE_PATH: LMS_App/LMS/LMS.xcodeproj
  SCHEME: LMS
  BUNDLE_IDENTIFIER: ru.tsum.lms.igor

jobs:
  debug:
    name: Debug iOS Build Environment
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Debug Environment
        run: |
          echo "üîç Environment Debug Information:"
          echo "üì± Xcode version:"
          xcodebuild -version
          echo "üìÅ Available Xcode installations:"
          ls -la /Applications/ | grep -i xcode || true
          echo "üìã Current developer directory:"
          xcode-select -p
          echo "üìä Available simulators:"
          xcrun simctl list devices | head -20

      - name: Check Project Structure
        run: |
          echo "üèóÔ∏è Project Structure:"
          echo "üìÅ Root directory:"
          ls -la
          echo "üìÅ LMS_App directory:"
          ls -la LMS_App/ || echo "‚ùå LMS_App directory not found"
          echo "üìÅ LMS project directory:"
          ls -la LMS_App/LMS/ || echo "‚ùå LMS project directory not found"
          echo "üìÅ Xcode project:"
          ls -la LMS_App/LMS/*.xcodeproj/ || echo "‚ùå Xcode project not found"

      - name: Check Schemes and Targets
        run: |
          cd LMS_App/LMS
          echo "üìã Available schemes:"
          xcodebuild -list -project LMS.xcodeproj || echo "‚ùå Failed to list schemes"
          echo "üéØ Available destinations:"
          xcodebuild -showdestinations -project LMS.xcodeproj -scheme LMS || echo "‚ùå Failed to show destinations"

      - name: Test Simple Build
        run: |
          cd LMS_App/LMS
          echo "üî® Testing simple build (no signing):"
          xcodebuild build \
            -project LMS.xcodeproj \
            -scheme LMS \
            -configuration Debug \
            -destination 'platform=iOS Simulator,name=iPhone 15' \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            | head -50

      - name: Check GitHub Secrets
        env:
          HAS_BUILD_CERT: ${{ secrets.BUILD_CERTIFICATE_BASE64 != '' }}
          HAS_P12_PASSWORD: ${{ secrets.P12_PASSWORD != '' }}
          HAS_PROVISION_PROFILE: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 != '' }}
          HAS_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID != '' }}
          HAS_API_KEY_ISSUER: ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID != '' }}
          HAS_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY != '' }}
        run: |
          echo "üîê GitHub Secrets Status:"
          echo "BUILD_CERTIFICATE_BASE64: $HAS_BUILD_CERT"
          echo "P12_PASSWORD: $HAS_P12_PASSWORD"  
          echo "BUILD_PROVISION_PROFILE_BASE64: $HAS_PROVISION_PROFILE"
          echo "APP_STORE_CONNECT_API_KEY_ID: $HAS_API_KEY_ID"
          echo "APP_STORE_CONNECT_API_KEY_ISSUER_ID: $HAS_API_KEY_ISSUER"
          echo "APP_STORE_CONNECT_API_KEY_KEY: $HAS_API_KEY" 