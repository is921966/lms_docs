name: üì± LMS Feedback Automation

on:
  issues:
    types: [opened, labeled, edited]
  issue_comment:
    types: [created]

env:
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

jobs:
  process-feedback:
    runs-on: ubuntu-latest
    if: contains(github.event.issue.labels.*.name, 'feedback')
    
    steps:
    - name: üìù Process New Feedback
      if: github.event.action == 'opened'
      uses: actions/github-script@v7
      with:
        script: |
          const issue = context.payload.issue;
          
          // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞–∑–Ω–∞—á–∞–µ–º –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö
          let assignees = [];
          if (issue.labels.some(label => label.name === 'bug')) {
            assignees = ['ishirokov']; // –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –ª–∏–¥ –¥–ª—è –±–∞–≥–æ–≤
          } else if (issue.labels.some(label => label.name === 'enhancement')) {
            assignees = ['ishirokov']; // –ü—Ä–æ–¥—É–∫—Ç-–º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —Ñ–∏—á
          } else if (issue.labels.some(label => label.name === 'question')) {
            assignees = ['ishirokov']; // –°–∞–ø–ø–æ—Ä—Ç –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤
          }
          
          // –ù–∞–∑–Ω–∞—á–∞–µ–º –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö
          if (assignees.length > 0) {
            await github.rest.issues.addAssignees({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue.number,
              assignees: assignees
            });
          }
          
          // –î–æ–±–∞–≤–ª—è–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
          const welcomeComment = `ü§ñ **–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∏–¥–±—ç–∫–∞**
          
          –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤! –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ–±—Ä–∞–±–æ—Ç–∞–µ–º –µ–≥–æ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.
          
          **–°—Ç–∞—Ç—É—Å**: –û–∂–∏–¥–∞–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è
          **–ù–∞–∑–Ω–∞—á–µ–Ω–æ**: ${assignees.length > 0 ? assignees.join(', ') : '–ë—É–¥–µ—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–æ –≤—Ä—É—á–Ω—É—é'}
          
          –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏, –µ—Å–ª–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.
          
          ---
          *–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è LMS*`;
          
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: issue.number,
            body: welcomeComment
          });

    - name: üè∑Ô∏è Auto-assign Additional Labels
      if: github.event.action == 'opened'
      uses: actions/github-script@v7
      with:
        script: |
          const issue = context.payload.issue;
          const body = issue.body.toLowerCase();
          const title = issue.title.toLowerCase();
          
          let additionalLabels = [];
          
          // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
          if (body.includes('–∫—É—Ä—Å') || title.includes('course')) {
            additionalLabels.push('component:courses');
          }
          if (body.includes('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å') || title.includes('user')) {
            additionalLabels.push('component:users');
          }
          if (body.includes('—Ç–µ—Å—Ç') || title.includes('test')) {
            additionalLabels.push('component:testing');
          }
          if (body.includes('–∫–æ–º–ø–µ—Ç–µ–Ω—Ü') || title.includes('competenc')) {
            additionalLabels.push('component:competencies');
          }
          
          // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
          if (body.includes('iphone') || body.includes('ios')) {
            additionalLabels.push('platform:ios');
          }
          
          // –î–æ–±–∞–≤–ª—è–µ–º –ª–µ–π–±–ª—ã
          if (additionalLabels.length > 0) {
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue.number,
              labels: additionalLabels
            });
          }

  notify-high-priority:
    runs-on: ubuntu-latest
    if: contains(github.event.issue.labels.*.name, 'priority:high') && github.event.action == 'opened'
    
    steps:
    - name: üö® High Priority Notification
      uses: actions/github-script@v7
      with:
        script: |
          const issue = context.payload.issue;
          console.log(`üö® –í—ã—Å–æ–∫–æ–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–π —Ñ–∏–¥–±—ç–∫: ${issue.title}`);
          console.log(`üìù Issue #${issue.number}: ${issue.html_url}`);

  auto-close-resolved:
    runs-on: ubuntu-latest
    if: github.event.action == 'labeled' && github.event.label.name == 'status:resolved'
    
    steps:
    - name: ‚úÖ Auto-close Resolved Issues
      uses: actions/github-script@v7
      with:
        script: |
          const issue = context.payload.issue;
          
          // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º resolved issues
          await github.rest.issues.update({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: issue.number,
            state: 'closed'
          });
          
          // –î–æ–±–∞–≤–ª—è–µ–º –±–ª–∞–≥–æ–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: issue.number,
            body: `‚úÖ **–ü—Ä–æ–±–ª–µ–º–∞ —Ä–µ—à–µ–Ω–∞!**
            
            –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤! –ü—Ä–æ–±–ª–µ–º–∞ –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ —Ä–µ—à–µ–Ω–∞ –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥–æ–π.
            
            –ï—Å–ª–∏ —É –≤–∞—Å –æ—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –≤–æ–∑–Ω–∏–∫–ª–∞ —Å–Ω–æ–≤–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π Issue.
            
            ---
            *–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–∫—Ä—ã—Ç–æ —Å–∏—Å—Ç–µ–º–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∏–¥–±—ç–∫–æ–≤*`
          });
