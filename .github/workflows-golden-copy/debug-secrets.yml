name: Debug Secrets and Environment

on:
  workflow_dispatch:

jobs:
  debug-secrets:
    name: Debug GitHub Secrets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check Project Structure
        run: |
          echo "üìÅ Project structure:"
          ls -la
          echo "üì± iOS App structure:"
          ls -la LMS_App/ || echo "‚ùå LMS_App not found"
          ls -la LMS_App/LMS/ || echo "‚ùå LMS project not found"
          ls -la LMS_App/LMS/scripts/ || echo "‚ùå Scripts not found"

      - name: Check GitHub Secrets Status
        env:
          # iOS Deploy secrets
          HAS_BUILD_CERT: ${{ secrets.BUILD_CERTIFICATE_BASE64 != '' }}
          HAS_P12_PASSWORD: ${{ secrets.P12_PASSWORD != '' }}
          HAS_KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD != '' }}
          HAS_PROVISION_PROFILE: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 != '' }}
          HAS_PROVISION_UUID: ${{ secrets.PROVISION_PROFILE_UUID != '' }}
          
          # App Store Connect secrets
          HAS_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID != '' }}
          HAS_API_ISSUER: ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID != '' }}
          HAS_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY != '' }}
          HAS_APP_ID: ${{ secrets.APP_ID != '' }}
          
          # Alternative API key
          HAS_API_KEY_ALT: ${{ secrets.APP_STORE_CONNECT_API_KEY != '' }}
          
          # Notification secrets
          HAS_SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK != '' }}
        run: |
          echo "üîê GitHub Secrets Status Check:"
          echo ""
          echo "üì± iOS Signing Secrets:"
          echo "  BUILD_CERTIFICATE_BASE64: $HAS_BUILD_CERT"
          echo "  P12_PASSWORD: $HAS_P12_PASSWORD"
          echo "  KEYCHAIN_PASSWORD: $HAS_KEYCHAIN_PASSWORD"
          echo "  BUILD_PROVISION_PROFILE_BASE64: $HAS_PROVISION_PROFILE"
          echo "  PROVISION_PROFILE_UUID: $HAS_PROVISION_UUID"
          echo ""
          echo "üè™ App Store Connect Secrets:"
          echo "  APP_STORE_CONNECT_API_KEY_ID: $HAS_API_KEY_ID"
          echo "  APP_STORE_CONNECT_API_KEY_ISSUER_ID: $HAS_API_ISSUER"
          echo "  APP_STORE_CONNECT_API_KEY_KEY: $HAS_API_KEY"
          echo "  APP_STORE_CONNECT_API_KEY (alternative): $HAS_API_KEY_ALT"
          echo "  APP_ID: $HAS_APP_ID"
          echo ""
          echo "üîî Notification Secrets:"
          echo "  SLACK_WEBHOOK: $HAS_SLACK_WEBHOOK"
          echo ""
          
          # –ü–æ–¥—Å—á–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö —Å–µ–∫—Ä–µ—Ç–æ–≤
          missing=0
          if [ "$HAS_BUILD_CERT" = "false" ]; then missing=$((missing+1)); fi
          if [ "$HAS_P12_PASSWORD" = "false" ]; then missing=$((missing+1)); fi
          if [ "$HAS_PROVISION_PROFILE" = "false" ]; then missing=$((missing+1)); fi
          if [ "$HAS_PROVISION_UUID" = "false" ]; then missing=$((missing+1)); fi
          if [ "$HAS_API_KEY_ID" = "false" ]; then missing=$((missing+1)); fi
          if [ "$HAS_API_ISSUER" = "false" ]; then missing=$((missing+1)); fi
          if [ "$HAS_API_KEY" = "false" ] && [ "$HAS_API_KEY_ALT" = "false" ]; then missing=$((missing+1)); fi
          
          echo "üìä Summary:"
          if [ $missing -eq 0 ]; then
            echo "‚úÖ All required secrets are configured!"
          else
            echo "‚ùå $missing required secrets are missing"
            echo "‚ö†Ô∏è  TestFlight deploy will fail until secrets are configured"
          fi

      - name: Check Workflow Files
        run: |
          echo "‚öôÔ∏è Workflow files check:"
          ls -la .github/workflows/
          echo ""
          echo "üìã Workflow file sizes:"
          wc -l .github/workflows/*.yml
          echo ""
          echo "üîç Main workflows:"
          grep -l "TestFlight\|Deploy\|iOS" .github/workflows/*.yml || echo "No iOS workflows found" 