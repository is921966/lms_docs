#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö UI —Ç–µ—Å—Ç–æ–≤ LMS –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./run-all-ui-tests.sh

echo "üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö UI —Ç–µ—Å—Ç–æ–≤ LMS..."
echo "================================"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
PROJECT_PATH="LMS.xcodeproj"
SCHEME="LMS"
DESTINATION="platform=iOS Simulator,name=iPhone 16 Pro"
RESULT_BUNDLE_PATH="TestResults/AllUITests.xcresult"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ø—Ä–æ–µ–∫—Ç–∞
if [ ! -d "$PROJECT_PATH" ]; then
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞: –ü—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ LMS_App/LMS${NC}"
    exit 1
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
mkdir -p TestResults

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤
run_test_suite() {
    local test_class=$1
    local description=$2
    
    echo -e "\n${YELLOW}‚ñ∂Ô∏è  –ó–∞–ø—É—Å–∫ $description...${NC}"
    
    # –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
    xcodebuild test \
        -project "$PROJECT_PATH" \
        -scheme "$SCHEME" \
        -destination "$DESTINATION" \
        -only-testing:LMSUITests/$test_class \
        -resultBundlePath "$RESULT_BUNDLE_PATH" \
        -quiet | grep -E "Test Case|passed|failed|error"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    if [ ${PIPESTATUS[0]} -eq 0 ]; then
        echo -e "${GREEN}‚úÖ $description - –ü–†–û–ô–î–ï–ù–û${NC}"
        return 0
    else
        echo -e "${RED}‚ùå $description - –ü–†–û–í–ê–õ–ï–ù–û${NC}"
        return 1
    fi
}

# –ó–∞–ø—É—Å–∫ –±–∞–∑–æ–≤–æ–π –∫–æ–º–ø–∏–ª—è—Ü–∏–∏
echo -e "\n${YELLOW}üî® –ö–æ–º–ø–∏–ª—è—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞...${NC}"
xcodebuild build-for-testing \
    -project "$PROJECT_PATH" \
    -scheme "$SCHEME" \
    -destination "$DESTINATION" \
    -quiet

if [ $? -ne 0 ]; then
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ –ö–æ–º–ø–∏–ª—è—Ü–∏—è —É—Å–ø–µ—à–Ω–∞${NC}"

# –°—á–µ—Ç—á–∏–∫–∏
TOTAL_SUITES=0
PASSED_SUITES=0
FAILED_SUITES=0

# –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤—ã—Ö –Ω–∞–±–æ—Ä–æ–≤
echo -e "\n${YELLOW}üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤—ã—Ö –Ω–∞–±–æ—Ä–æ–≤...${NC}"
echo "================================"

# Phase 1-3: –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ—Å—Ç—ã
run_test_suite "ComprehensiveUITests" "–û—Å–Ω–æ–≤–Ω—ã–µ UI —Ç–µ—Å—Ç—ã (Phase 1-3)"
[ $? -eq 0 ] && ((PASSED_SUITES++)) || ((FAILED_SUITES++))
((TOTAL_SUITES++))

# Phase 4: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã
run_test_suite "Phase4ComprehensiveTests" "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã (Phase 4)"
[ $? -eq 0 ] && ((PASSED_SUITES++)) || ((FAILED_SUITES++))
((TOTAL_SUITES++))

# –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ —Ç–µ—Å—Ç—ã –º–æ–¥—É–ª–µ–π
run_test_suite "CompetencyManagementUITests" "–¢–µ—Å—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏—è–º–∏"
[ $? -eq 0 ] && ((PASSED_SUITES++)) || ((FAILED_SUITES++))
((TOTAL_SUITES++))

run_test_suite "PositionManagementUITests" "–¢–µ—Å—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ–ª–∂–Ω–æ—Å—Ç—è–º–∏"
[ $? -eq 0 ] && ((PASSED_SUITES++)) || ((FAILED_SUITES++))
((TOTAL_SUITES++))

run_test_suite "UserManagementUITests" "–¢–µ—Å—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"
[ $? -eq 0 ] && ((PASSED_SUITES++)) || ((FAILED_SUITES++))
((TOTAL_SUITES++))

run_test_suite "CourseMaterialsUITests" "–¢–µ—Å—Ç—ã –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∫—É—Ä—Å–æ–≤"
[ $? -eq 0 ] && ((PASSED_SUITES++)) || ((FAILED_SUITES++))
((TOTAL_SUITES++))

run_test_suite "OnboardingProgramTests" "–¢–µ—Å—Ç—ã –ø—Ä–æ–≥—Ä–∞–º–º –∞–¥–∞–ø—Ç–∞—Ü–∏–∏"
[ $? -eq 0 ] && ((PASSED_SUITES++)) || ((FAILED_SUITES++))
((TOTAL_SUITES++))

run_test_suite "AnalyticsUITests" "–¢–µ—Å—Ç—ã –∞–Ω–∞–ª–∏—Ç–∏–∫–∏"
[ $? -eq 0 ] && ((PASSED_SUITES++)) || ((FAILED_SUITES++))
((TOTAL_SUITES++))

# Edge cases
run_test_suite "EdgeCaseTests" "–¢–µ—Å—Ç—ã –≥—Ä–∞–Ω–∏—á–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤"
[ $? -eq 0 ] && ((PASSED_SUITES++)) || ((FAILED_SUITES++))
((TOTAL_SUITES++))

# –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
echo -e "\n================================"
echo -e "${YELLOW}üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢${NC}"
echo "================================"
echo -e "–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö –Ω–∞–±–æ—Ä–æ–≤: $TOTAL_SUITES"
echo -e "${GREEN}‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ: $PASSED_SUITES${NC}"
echo -e "${RED}‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: $FAILED_SUITES${NC}"

# –†–∞—Å—á–µ—Ç –ø—Ä–æ—Ü–µ–Ω—Ç–∞ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏
if [ $TOTAL_SUITES -gt 0 ]; then
    SUCCESS_RATE=$((PASSED_SUITES * 100 / TOTAL_SUITES))
    echo -e "\n–ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏: ${SUCCESS_RATE}%"
    
    if [ $SUCCESS_RATE -eq 100 ]; then
        echo -e "\n${GREEN}üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!${NC}"
        echo -e "${GREEN}‚ú® MVP –≥–æ—Ç–æ–≤ –∫ —Ä–µ–ª–∏–∑—É!${NC}"
    elif [ $SUCCESS_RATE -ge 80 ]; then
        echo -e "\n${YELLOW}‚ö†Ô∏è  –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ, –Ω–æ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã${NC}"
    else
        echo -e "\n${RED}üö® –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å —Ç–µ—Å—Ç–∞–º–∏${NC}"
    fi
fi

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML –æ—Ç—á–µ—Ç–∞
echo -e "\n${YELLOW}üìÑ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞...${NC}"
xcrun xcresulttool graph --path "$RESULT_BUNDLE_PATH" > /dev/null 2>&1

# –û—Ç–∫—Ä—ã—Ç–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ Xcode (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
echo -e "\n–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
echo -e "${YELLOW}open $RESULT_BUNDLE_PATH${NC}"

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
END_TIME=$(date +%s)
if [ -f ".test_start_time" ]; then
    START_TIME=$(cat .test_start_time)
    DURATION=$((END_TIME - START_TIME))
    echo -e "\n–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: $((DURATION / 60)) –º–∏–Ω—É—Ç $((DURATION % 60)) —Å–µ–∫—É–Ω–¥"
    rm .test_start_time
fi

# –í–æ–∑–≤—Ä–∞—Ç –∫–æ–¥–∞ –æ—à–∏–±–∫–∏ –¥–ª—è CI/CD
if [ $FAILED_SUITES -gt 0 ]; then
    exit 1
else
    exit 0
fi 