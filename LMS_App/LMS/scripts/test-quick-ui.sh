#!/bin/bash

# ะัััััะน ะทะฐะฟััะบ ะพะดะฝะพะณะพ UI ัะตััะฐ ั ัะฐะนะผะฐััะพะผ
# ะัะฟะพะปัะทะพะฒะฐะฝะธะต: ./scripts/test-quick-ui.sh TestClass/testMethod

TEST_NAME="$1"
TIMEOUT_SECONDS="${2:-60}"

if [ -z "$TEST_NAME" ]; then
    echo "โ ะฃะบะฐะถะธัะต ะธะผั ัะตััะฐ"
    echo "ะัะฟะพะปัะทะพะฒะฐะฝะธะต: $0 TestClass/testMethod [timeout_seconds]"
    echo "ะัะธะผะตั: $0 LMSUITests/OnboardingFlowUITests/testViewOnboardingDashboard 120"
    exit 1
fi

echo "โก ะัััััะน ะทะฐะฟััะบ UI ัะตััะฐ"
echo "๐ฏ ะขะตัั: $TEST_NAME"
echo "โฑ๏ธ  ะขะฐะนะผะฐัั: $TIMEOUT_SECONDS ัะตะบัะฝะด"
echo ""

# ะัะธััะบะฐ ะฒะพะทะผะพะถะฝัั ะทะฐะฒะธััะธั ะฟัะพัะตััะพะฒ
echo "๐งน ะัะธััะบะฐ ััะฐััั ะฟัะพัะตััะพะฒ..."
pkill -f "xctest" 2>/dev/null || true
pkill -f "XCTestAgent" 2>/dev/null || true

# ะะฐะฟััะบ ัะธะผัะปััะพัะฐ ะตัะปะธ ะฝะต ะทะฐะฟััะตะฝ
echo "๐ฑ ะะฐะฟััะบ ัะธะผัะปััะพัะฐ..."
open -a Simulator
sleep 3

# ะะพะดะณะพัะพะฒะบะฐ ะฒัะตะผะตะฝะฝะพะณะพ ัะฐะนะปะฐ ะดะปั ะฒัะฒะพะดะฐ
TEMP_LOG=$(mktemp)
echo "๐ ะะพะณ: $TEMP_LOG"
echo ""

# ะะฐะฟััะบ ัะตััะฐ ะฒ ัะพะฝะต
echo "โถ๏ธ  ะะฐะฟััะบ ัะตััะฐ..."
xcodebuild test \
    -scheme LMS \
    -destination 'platform=iOS Simulator,name=iPhone 16 Pro' \
    -only-testing:"$TEST_NAME" \
    -parallel-testing-enabled NO \
    -maximum-concurrent-test-simulator-destinations 1 \
    2>&1 | tee "$TEMP_LOG" &

# ะกะพััะฐะฝัะตะผ PID ะฟัะพัะตััะฐ
TEST_PID=$!

# ะะดะตะผ ะทะฐะฒะตััะตะฝะธั ัะตััะฐ ะธะปะธ ัะฐะนะผะฐััะฐ
SECONDS_WAITED=0
while [ $SECONDS_WAITED -lt $TIMEOUT_SECONDS ]; do
    if ! kill -0 $TEST_PID 2>/dev/null; then
        # ะัะพัะตัั ะทะฐะฒะตััะธะปัั
        wait $TEST_PID
        EXIT_CODE=$?
        break
    fi
    sleep 1
    ((SECONDS_WAITED++))
    
    # ะะพะบะฐะทัะฒะฐะตะผ ะฟัะพะณัะตัั ะบะฐะถะดัะต 10 ัะตะบัะฝะด
    if [ $((SECONDS_WAITED % 10)) -eq 0 ]; then
        echo "โณ ะัะพัะปะพ $SECONDS_WAITED ัะตะบัะฝะด..."
    fi
done

# ะัะปะธ ะฟัะพัะตัั ะฒัะต ะตัะต ัะฐะฑะพัะฐะตั - ัะฑะธะฒะฐะตะผ ะตะณะพ
if kill -0 $TEST_PID 2>/dev/null; then
    echo ""
    echo "โฐ ะขะฐะนะผะฐัั! ะััะฐะฝะฐะฒะปะธะฒะฐะตะผ ัะตัั..."
    kill -TERM $TEST_PID 2>/dev/null
    sleep 2
    kill -KILL $TEST_PID 2>/dev/null
    
    # ะัะธััะบะฐ ะทะฐะฒะธััะธั ะฟัะพัะตััะพะฒ
    pkill -f "xctest" 2>/dev/null || true
    pkill -f "XCTestAgent" 2>/dev/null || true
    
    EXIT_CODE=124  # ะกัะฐะฝะดะฐััะฝัะน ะบะพะด ะดะปั ัะฐะนะผะฐััะฐ
fi

echo ""
echo "โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ"

# ะัะพะฒะตัะบะฐ ัะตะทัะปััะฐัะฐ
if [ ${EXIT_CODE:-1} -eq 0 ]; then
    echo "โ ะขะตัั ะฟัะพัะตะป ััะฟะตัะฝะพ!"
elif [ ${EXIT_CODE:-1} -eq 124 ]; then
    echo "โฐ ะขะตัั ะฟัะตะฒััะธะป ัะฐะนะผะฐัั ($TIMEOUT_SECONDS ัะตะบ)"
else
    echo "โ ะขะตัั ะฟัะพะฒะฐะปะธะปัั (ะบะพะด: ${EXIT_CODE:-1})"
fi

# ะะพะบะฐะทะฐัั ะฟะพัะปะตะดะฝะธะต ัััะพะบะธ ะปะพะณะฐ
echo ""
echo "๐ ะะพัะปะตะดะฝะธะต ัััะพะบะธ ะปะพะณะฐ:"
tail -20 "$TEMP_LOG" | grep -E "(Test Case|passed|failed|error)" || tail -10 "$TEMP_LOG"

# ะัะธััะบะฐ
rm -f "$TEMP_LOG"

exit ${EXIT_CODE:-1} 