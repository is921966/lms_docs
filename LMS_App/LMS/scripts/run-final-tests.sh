#!/bin/bash

echo "üß™ –§–ò–ù–ê–õ–¨–ù–´–ô –ó–ê–ü–£–°–ö –í–°–ï–• –¢–ï–°–¢–û–í SPRINT 45"
echo "=========================================="
echo ""

DEVICE_ID="C0F60722-8F57-46A8-A737-2A1CD8819E8E"
TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
RESULTS_DIR="TestResults/Final_Sprint45_$TIMESTAMP"

mkdir -p $RESULTS_DIR

# 1. Unit —Ç–µ—Å—Ç—ã
echo "üìã 1. UNIT –¢–ï–°–¢–´"
echo "----------------"
xcodebuild test \
    -scheme LMS \
    -destination "id=$DEVICE_ID" \
    -only-testing:LMSTests \
    -enableCodeCoverage YES \
    -resultBundlePath "$RESULTS_DIR/unit-tests.xcresult" \
    2>&1 | tee "$RESULTS_DIR/unit-tests.log" | \
    grep -E "(Test Suite.*passed|Test Suite.*failed|tests passed|tests failed)" | tail -5

# 2. UI —Ç–µ—Å—Ç—ã - –±–∞–∑–æ–≤—ã–µ
echo ""
echo "üì± 2. UI –¢–ï–°–¢–´ - –ë–∞–∑–æ–≤—ã–µ"
echo "------------------------"
xcodebuild test \
    -scheme LMS \
    -destination "id=$DEVICE_ID" \
    -only-testing:LMSUITests/BasicLoginTest \
    -only-testing:LMSUITests/SimpleSmokeTest \
    -only-testing:LMSUITests/SmokeTests \
    -enableCodeCoverage YES \
    -resultBundlePath "$RESULTS_DIR/ui-basic.xcresult" \
    2>&1 | tee "$RESULTS_DIR/ui-basic.log" | \
    grep -E "(Test Suite.*passed|Test Suite.*failed|tests passed|tests failed)" | tail -5

# 3. UI —Ç–µ—Å—Ç—ã - Course Management
echo ""
echo "üìö 3. UI –¢–ï–°–¢–´ - Course Management"
echo "----------------------------------"
xcodebuild test \
    -scheme LMS \
    -destination "id=$DEVICE_ID" \
    -only-testing:LMSUITests/CourseManagementUITests \
    -enableCodeCoverage YES \
    -resultBundlePath "$RESULTS_DIR/ui-course.xcresult" \
    -test-timeouts-enabled NO \
    2>&1 | tee "$RESULTS_DIR/ui-course.log" | \
    grep -E "(Test Suite.*passed|Test Suite.*failed|tests passed|tests failed)" | tail -5

# 4. UI —Ç–µ—Å—Ç—ã - Cmi5
echo ""
echo "üéØ 4. UI –¢–ï–°–¢–´ - Cmi5"
echo "---------------------"
xcodebuild test \
    -scheme LMS \
    -destination "id=$DEVICE_ID" \
    -only-testing:LMSUITests/Cmi5UITests \
    -enableCodeCoverage YES \
    -resultBundlePath "$RESULTS_DIR/ui-cmi5.xcresult" \
    -test-timeouts-enabled NO \
    2>&1 | tee "$RESULTS_DIR/ui-cmi5.log" | \
    grep -E "(Test Suite.*passed|Test Suite.*failed|tests passed|tests failed)" | tail -5

# 5. E2E —Ç–µ—Å—Ç—ã
echo ""
echo "üîó 5. E2E –¢–ï–°–¢–´"
echo "---------------"
xcodebuild test \
    -scheme LMS \
    -destination "id=$DEVICE_ID" \
    -only-testing:LMSUITests/CourseManagementE2ETests \
    -only-testing:LMSUITests/Cmi5E2ETests \
    -only-testing:LMSUITests/ModulesIntegrationE2ETests \
    -enableCodeCoverage YES \
    -resultBundlePath "$RESULTS_DIR/e2e-tests.xcresult" \
    -test-timeouts-enabled NO \
    2>&1 | tee "$RESULTS_DIR/e2e-tests.log" | \
    grep -E "(Test Suite.*passed|Test Suite.*failed|tests passed|tests failed)" | tail -5

# 6. –§–∏–Ω–∞–ª—å–Ω—ã–π –ø–æ–¥—Å—á–µ—Ç
echo ""
echo "üìä –§–ò–ù–ê–õ–¨–ù–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´"
echo "======================="

# Unit —Ç–µ—Å—Ç—ã
UNIT_PASSED=$(grep -c "passed" "$RESULTS_DIR/unit-tests.log" || echo 0)
UNIT_FAILED=$(grep -c "failed" "$RESULTS_DIR/unit-tests.log" || echo 0)
UNIT_TOTAL=$((UNIT_PASSED + UNIT_FAILED))

# UI —Ç–µ—Å—Ç—ã
UI_PASSED=$(cat "$RESULTS_DIR"/ui-*.log "$RESULTS_DIR"/e2e-*.log 2>/dev/null | grep -c "passed" || echo 0)
UI_FAILED=$(cat "$RESULTS_DIR"/ui-*.log "$RESULTS_DIR"/e2e-*.log 2>/dev/null | grep -c "failed" || echo 0)
UI_TOTAL=$((UI_PASSED + UI_FAILED))

# –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
TOTAL_TESTS=$((UNIT_TOTAL + UI_TOTAL))
TOTAL_PASSED=$((UNIT_PASSED + UI_PASSED))
TOTAL_FAILED=$((UNIT_FAILED + UI_FAILED))

if [ $TOTAL_TESTS -gt 0 ]; then
    PASS_RATE=$((TOTAL_PASSED * 100 / TOTAL_TESTS))
else
    PASS_RATE=0
fi

echo ""
echo "Unit —Ç–µ—Å—Ç—ã:"
echo "  –í—Å–µ–≥–æ: $UNIT_TOTAL"
echo "  –ü—Ä–æ—à–ª–æ: $UNIT_PASSED"
echo "  –£–ø–∞–ª–æ: $UNIT_FAILED"
echo ""
echo "UI/E2E —Ç–µ—Å—Ç—ã:"
echo "  –í—Å–µ–≥–æ: $UI_TOTAL"
echo "  –ü—Ä–æ—à–ª–æ: $UI_PASSED"
echo "  –£–ø–∞–ª–æ: $UI_FAILED"
echo ""
echo "–ò–¢–û–ì–û:"
echo "  –í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: $TOTAL_TESTS"
echo "  –ü—Ä–æ—à–ª–æ: $TOTAL_PASSED ($([ $TOTAL_PASSED -gt 0 ] && echo "$((TOTAL_PASSED * 100 / TOTAL_TESTS))" || echo 0)%)"
echo "  –£–ø–∞–ª–æ: $TOTAL_FAILED ($([ $TOTAL_FAILED -gt 0 ] && echo "$((TOTAL_FAILED * 100 / TOTAL_TESTS))" || echo 0)%)"
echo ""
echo "‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: $RESULTS_DIR"
echo ""

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –ø–æ–∫—Ä—ã—Ç–∏—è
echo "üìà –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –ø–æ–∫—Ä—ã—Ç–∏—è..."
if [ -f "$RESULTS_DIR/unit-tests.xcresult" ]; then
    xcrun xccov view --report "$RESULTS_DIR/unit-tests.xcresult" > "$RESULTS_DIR/coverage-report.txt" 2>/dev/null || echo "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á–µ—Ç –ø–æ–∫—Ä—ã—Ç–∏—è"
fi

echo "‚úÖ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!" 