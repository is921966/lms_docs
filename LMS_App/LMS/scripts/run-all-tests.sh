#!/bin/bash

echo "üß™ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤ LMS..."
echo "================================="

DEVICE_ID="C0F60722-8F57-46A8-A737-2A1CD8819E8E"
TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
RESULTS_DIR="TestResults/Sprint45_$TIMESTAMP"

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
mkdir -p $RESULTS_DIR

# 1. Unit —Ç–µ—Å—Ç—ã
echo ""
echo "üìã –ó–∞–ø—É—Å–∫ Unit —Ç–µ—Å—Ç–æ–≤..."
echo "------------------------"

xcodebuild test \
    -scheme LMS \
    -destination "id=$DEVICE_ID" \
    -only-testing:LMSTests \
    -enableCodeCoverage YES \
    -resultBundlePath "$RESULTS_DIR/unit-tests.xcresult" \
    2>&1 | tee "$RESULTS_DIR/unit-tests.log" | \
    grep -E "(Test Suite|Test Case.*passed|Test Case.*failed|tests? passed|tests? failed)"

# 2. UI —Ç–µ—Å—Ç—ã - –±–∞–∑–æ–≤—ã–µ
echo ""
echo "üì± –ó–∞–ø—É—Å–∫ –±–∞–∑–æ–≤—ã—Ö UI —Ç–µ—Å—Ç–æ–≤..."
echo "------------------------------"

xcodebuild test \
    -scheme LMS \
    -destination "id=$DEVICE_ID" \
    -only-testing:LMSUITests/BasicLoginTest \
    -only-testing:LMSUITests/SimpleSmokeTest \
    -only-testing:LMSUITests/SmokeTests \
    -enableCodeCoverage YES \
    -resultBundlePath "$RESULTS_DIR/ui-basic-tests.xcresult" \
    2>&1 | tee "$RESULTS_DIR/ui-basic-tests.log" | \
    grep -E "(Test Suite|Test Case.*passed|Test Case.*failed|tests? passed|tests? failed)"

# 3. UI —Ç–µ—Å—Ç—ã - Course Management (–ø–æ–ø—ã—Ç–∫–∞)
echo ""
echo "üìö –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞ Course Management UI —Ç–µ—Å—Ç–æ–≤..."
echo "-------------------------------------------------"

xcodebuild test \
    -scheme LMS \
    -destination "id=$DEVICE_ID" \
    -only-testing:LMSUITests/CourseManagementUITests/testCourseListDisplay \
    -enableCodeCoverage YES \
    -resultBundlePath "$RESULTS_DIR/ui-course-tests.xcresult" \
    -test-timeouts-enabled NO \
    2>&1 | tee "$RESULTS_DIR/ui-course-tests.log" | \
    grep -E "(Test Suite|Test Case.*passed|Test Case.*failed|tests? passed|tests? failed)"

# 4. –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
echo ""
echo "üìä –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤..."
echo "========================"

# –ü–æ–¥—Å—á–µ—Ç unit —Ç–µ—Å—Ç–æ–≤
UNIT_PASSED=$(grep -c "passed" "$RESULTS_DIR/unit-tests.log" | head -1)
UNIT_FAILED=$(grep -c "failed" "$RESULTS_DIR/unit-tests.log" | head -1)
UNIT_TOTAL=$((UNIT_PASSED + UNIT_FAILED))

echo "Unit —Ç–µ—Å—Ç—ã:"
echo "  –í—Å–µ–≥–æ: $UNIT_TOTAL"
echo "  –ü—Ä–æ—à–ª–æ: $UNIT_PASSED"
echo "  –£–ø–∞–ª–æ: $UNIT_FAILED"

# –ü–æ–¥—Å—á–µ—Ç UI —Ç–µ—Å—Ç–æ–≤
UI_PASSED=$(grep -c "passed" "$RESULTS_DIR/ui-*.log" | awk -F: '{sum+=$2} END {print sum}')
UI_FAILED=$(grep -c "failed" "$RESULTS_DIR/ui-*.log" | awk -F: '{sum+=$2} END {print sum}')
UI_TOTAL=$((UI_PASSED + UI_FAILED))

echo ""
echo "UI —Ç–µ—Å—Ç—ã:"
echo "  –í—Å–µ–≥–æ: $UI_TOTAL"
echo "  –ü—Ä–æ—à–ª–æ: $UI_PASSED"
echo "  –£–ø–∞–ª–æ: $UI_FAILED"

# –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
TOTAL_TESTS=$((UNIT_TOTAL + UI_TOTAL))
TOTAL_PASSED=$((UNIT_PASSED + UI_PASSED))
TOTAL_FAILED=$((UNIT_FAILED + UI_FAILED))
PASS_RATE=$((TOTAL_PASSED * 100 / TOTAL_TESTS))

echo ""
echo "–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
echo "  –í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: $TOTAL_TESTS"
echo "  –ü—Ä–æ—à–ª–æ: $TOTAL_PASSED"
echo "  –£–ø–∞–ª–æ: $TOTAL_FAILED"
echo "  –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: $PASS_RATE%"

echo ""
echo "‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: $RESULTS_DIR" 