#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–º–ø–æ—Ä—Ç–∞ Cmi5 –ø–∞–∫–µ—Ç–æ–≤

echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–∞ Cmi5 –ø–∞–∫–µ—Ç–æ–≤..."
echo "======================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤
run_test() {
    local test_name=$1
    local test_class=$2
    local test_method=$3
    
    echo -e "\n${YELLOW}‚ñ∂ –ó–∞–ø—É—Å–∫: $test_name${NC}"
    
    if [ -z "$test_method" ]; then
        # –ó–∞–ø—É—Å–∫ –≤—Å–µ–≥–æ –∫–ª–∞—Å—Å–∞ —Ç–µ—Å—Ç–æ–≤
        xcodebuild test \
            -scheme LMS \
            -destination 'platform=iOS Simulator,name=iPhone 16 Pro' \
            -only-testing:LMSTests/$test_class \
            -quiet | xcpretty
    else
        # –ó–∞–ø—É—Å–∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞
        xcodebuild test \
            -scheme LMS \
            -destination 'platform=iOS Simulator,name=iPhone 16 Pro' \
            -only-testing:LMSTests/$test_class/$test_method \
            -quiet | xcpretty
    fi
    
    if [ ${PIPESTATUS[0]} -eq 0 ]; then
        echo -e "${GREEN}‚úÖ $test_name - PASSED${NC}"
        return 0
    else
        echo -e "${RED}‚ùå $test_name - FAILED${NC}"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ UI —Ç–µ—Å—Ç–æ–≤
run_ui_test() {
    local test_name=$1
    local test_class=$2
    local test_method=$3
    
    echo -e "\n${YELLOW}‚ñ∂ –ó–∞–ø—É—Å–∫ UI —Ç–µ—Å—Ç–∞: $test_name${NC}"
    
    if [ -z "$test_method" ]; then
        # –ó–∞–ø—É—Å–∫ –≤—Å–µ–≥–æ –∫–ª–∞—Å—Å–∞ —Ç–µ—Å—Ç–æ–≤
        xcodebuild test \
            -scheme LMS \
            -destination 'platform=iOS Simulator,name=iPhone 16 Pro' \
            -only-testing:LMSUITests/$test_class \
            -quiet | xcpretty
    else
        # –ó–∞–ø—É—Å–∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞
        xcodebuild test \
            -scheme LMS \
            -destination 'platform=iOS Simulator,name=iPhone 16 Pro' \
            -only-testing:LMSUITests/$test_class/$test_method \
            -quiet | xcpretty
    fi
    
    if [ ${PIPESTATUS[0]} -eq 0 ]; then
        echo -e "${GREEN}‚úÖ $test_name - PASSED${NC}"
        return 0
    else
        echo -e "${RED}‚ùå $test_name - FAILED${NC}"
        return 1
    fi
}

# –°—á–µ—Ç—á–∏–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
TOTAL_TESTS=0
PASSED_TESTS=0
FAILED_TESTS=0

# Unit —Ç–µ—Å—Ç—ã

echo -e "\n${YELLOW}üîß Unit —Ç–µ—Å—Ç—ã${NC}"
echo "----------------"

# –¢–µ—Å—Ç –ø–∞—Ä—Å–µ—Ä–∞
run_test "Cmi5 Parser" "Cmi5ParserTests"
if [ $? -eq 0 ]; then ((PASSED_TESTS++)); else ((FAILED_TESTS++)); fi
((TOTAL_TESTS++))

# –¢–µ—Å—Ç –º–æ–¥–µ–ª–µ–π
run_test "Cmi5 Models" "Cmi5ModelsTests"
if [ $? -eq 0 ]; then ((PASSED_TESTS++)); else ((FAILED_TESTS++)); fi
((TOTAL_TESTS++))

# –¢–µ—Å—Ç —Å–µ—Ä–≤–∏—Å–∞
run_test "Cmi5 Service" "Cmi5ServiceTests"
if [ $? -eq 0 ]; then ((PASSED_TESTS++)); else ((FAILED_TESTS++)); fi
((TOTAL_TESTS++))

# –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã

echo -e "\n${YELLOW}üîó –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã${NC}"
echo "-------------------------"

# –¢–µ—Å—Ç –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –∏–º–ø–æ—Ä—Ç–∞
run_test "Import Integration" "Cmi5ImportIntegrationTests" "testImportPackageFullCycle"
if [ $? -eq 0 ]; then ((PASSED_TESTS++)); else ((FAILED_TESTS++)); fi
((TOTAL_TESTS++))

# –¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏
run_test "Import Validation" "Cmi5ImportIntegrationTests" "testImportInvalidPackage"
if [ $? -eq 0 ]; then ((PASSED_TESTS++)); else ((FAILED_TESTS++)); fi
((TOTAL_TESTS++))

# UI —Ç–µ—Å—Ç—ã

echo -e "\n${YELLOW}üì± UI —Ç–µ—Å—Ç—ã${NC}"
echo "------------"

# –¢–µ—Å—Ç UI –∏–º–ø–æ—Ä—Ç–∞
run_ui_test "Import UI Flow" "Cmi5ImportUITests" "testCmi5ImportFlow"
if [ $? -eq 0 ]; then ((PASSED_TESTS++)); else ((FAILED_TESTS++)); fi
((TOTAL_TESTS++))

# –¢–µ—Å—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞
run_ui_test "Package List UI" "Cmi5ImportUITests" "testCmi5PackageListDisplay"
if [ $? -eq 0 ]; then ((PASSED_TESTS++)); else ((FAILED_TESTS++)); fi
((TOTAL_TESTS++))

# –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç

echo -e "\n${YELLOW}üìä –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç${NC}"
echo "=================="
echo -e "–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: $TOTAL_TESTS"
echo -e "${GREEN}–ü—Ä–æ–π–¥–µ–Ω–æ: $PASSED_TESTS${NC}"
echo -e "${RED}–ü—Ä–æ–≤–∞–ª–µ–Ω–æ: $FAILED_TESTS${NC}"

if [ $FAILED_TESTS -eq 0 ]; then
    echo -e "\n${GREEN}üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!${NC}"
    exit 0
else
    echo -e "\n${RED}‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å${NC}"
    exit 1
fi 