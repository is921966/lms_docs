//
//  FeedItem.swift
//  LMS
//
//  –ú–æ–¥–µ–ª—å —ç–ª–µ–º–µ–Ω—Ç–∞ –ª–µ–Ω—Ç—ã –Ω–æ–≤–æ—Å—Ç–µ–π
//

import Foundation

/// –≠–ª–µ–º–µ–Ω—Ç –ª–µ–Ω—Ç—ã –Ω–æ–≤–æ—Å—Ç–µ–π
struct FeedItem: Identifiable, Codable, Equatable {
    let id: UUID
    let type: FeedItemType
    let title: String
    let content: String
    let author: String
    let publishedAt: Date
    let imageURL: String?
    let tags: [String]
    let priority: Priority
    let metadata: [String: String]
    var isRead: Bool
    
    init(
        id: UUID = UUID(),
        type: FeedItemType,
        title: String,
        content: String,
        author: String,
        publishedAt: Date = Date(),
        imageURL: String? = nil,
        tags: [String] = [],
        priority: Priority = .normal,
        metadata: [String: String] = [:],
        isRead: Bool = false
    ) {
        self.id = id
        self.type = type
        self.title = title
        self.content = content
        self.author = author
        self.publishedAt = publishedAt
        self.imageURL = imageURL
        self.tags = tags
        self.priority = priority
        self.metadata = metadata
        self.isRead = isRead
    }
}

// MARK: - Feed Item Type

extension FeedItem {
    /// –¢–∏–ø —ç–ª–µ–º–µ–Ω—Ç–∞ –ª–µ–Ω—Ç—ã
    enum FeedItemType: String, Codable, CaseIterable {
        case news = "news"
        case announcement = "announcement"
        case update = "update"
        case event = "event"
        case achievement = "achievement"
        case course = "course"
        case release = "release"
        
        var localizedName: String {
            switch self {
            case .news: return "–ù–æ–≤–æ—Å—Ç—å"
            case .announcement: return "–û–±—ä—è–≤–ª–µ–Ω–∏–µ"
            case .update: return "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ"
            case .event: return "–°–æ–±—ã—Ç–∏–µ"
            case .achievement: return "–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ"
            case .course: return "–ö—É—Ä—Å"
            case .release: return "–†–µ–ª–∏–∑"
            }
        }
        
        var icon: String {
            switch self {
            case .news: return "newspaper"
            case .announcement: return "megaphone"
            case .update: return "arrow.clockwise.circle"
            case .event: return "calendar"
            case .achievement: return "trophy"
            case .course: return "book"
            case .release: return "app.badge"
            }
        }
        
        var color: String {
            switch self {
            case .news: return "blue"
            case .announcement: return "orange"
            case .update: return "green"
            case .event: return "purple"
            case .achievement: return "yellow"
            case .course: return "teal"
            case .release: return "red"
            }
        }
    }
}

// MARK: - Priority

extension FeedItem {
    /// –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç —ç–ª–µ–º–µ–Ω—Ç–∞
    enum Priority: String, Codable, Comparable {
        case low = "low"
        case normal = "normal"
        case high = "high"
        case urgent = "urgent"
        
        var sortOrder: Int {
            switch self {
            case .low: return 0
            case .normal: return 1
            case .high: return 2
            case .urgent: return 3
            }
        }
        
        static func < (lhs: Priority, rhs: Priority) -> Bool {
            return lhs.sortOrder < rhs.sortOrder
        }
    }
}

// MARK: - Helper Methods

extension FeedItem {
    /// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
    var formattedDate: String {
        let formatter = DateFormatter()
        formatter.locale = Locale(identifier: "ru_RU")
        
        let calendar = Calendar.current
        if calendar.isDateInToday(publishedAt) {
            formatter.dateFormat = "–°–µ–≥–æ–¥–Ω—è –≤ HH:mm"
        } else if calendar.isDateInYesterday(publishedAt) {
            formatter.dateFormat = "–í—á–µ—Ä–∞ –≤ HH:mm"
        } else if calendar.isDate(publishedAt, equalTo: Date(), toGranularity: .year) {
            formatter.dateFormat = "d MMMM –≤ HH:mm"
        } else {
            formatter.dateFormat = "d MMMM yyyy"
        }
        
        return formatter.string(from: publishedAt)
    }
    
    /// –ö—Ä–∞—Ç–∫–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ
    var summary: String {
        let maxLength = 150
        if content.count <= maxLength {
            return content
        }
        
        let index = content.index(content.startIndex, offsetBy: maxLength)
        return String(content[..<index]) + "..."
    }
    
    /// –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –Ω–æ–≤–æ—Å—Ç—å –≤–∞–∂–Ω–æ–π
    var isImportant: Bool {
        return priority == .high || priority == .urgent || type == .announcement || type == .release
    }
}

// MARK: - Mock Data

extension FeedItem {
    static var mockItems: [FeedItem] {
        [
            FeedItem(
                type: .announcement,
                title: "–î–æ—Å—Ç—É–ø–Ω–∞ –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è 2.1.1",
                content: """
                <div style="font-family: -apple-system, system-ui; padding: 10px;">
                    <h1 style="font-size: 24px; margin-bottom: 15px;">
                        üöÄ –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è 2.1.1 <span style="color: #666; font-size: 18px;">(Build 206)</span>
                    </h1>
                    
                    <div style="margin-top: 20px;">
                        <h2 style="font-size: 20px; color: #333; margin-bottom: 10px;">
                            ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ —Ç–µ—Å—Ç–æ–≤–∞—è –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞
                        </h2>
                        <ul style="margin: 0; padding-left: 20px;">
                            <li style="margin-bottom: 5px; color: #555; line-height: 1.5;">–£–¥–∞–ª–µ–Ω—ã –¥—É–±–ª–∏–∫–∞—Ç—ã —Ñ–∞–π–ª–æ–≤ —Ç–µ—Å—Ç–æ–≤</li>
                            <li style="margin-bottom: 5px; color: #555; line-height: 1.5;">–ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –≤—Å–µ –æ—à–∏–±–∫–∏ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ UI —Ç–µ—Å—Ç–æ–≤</li>
                            <li style="margin-bottom: 5px; color: #555; line-height: 1.5;">–û–±–Ω–æ–≤–ª–µ–Ω–∞ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è 43 UI —Ç–µ—Å—Ç–æ–≤</li>
                        </ul>
                    </div>
                    
                    <div style="margin-top: 20px;">
                        <h2 style="font-size: 20px; color: #333; margin-bottom: 10px;">
                            üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —É–ª—É—á—à–µ–Ω–∏—è
                        </h2>
                        <ul style="margin: 0; padding-left: 20px;">
                            <li style="margin-bottom: 5px; color: #555; line-height: 1.5;">–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏—è –≤ —Ç–µ—Å—Ç–∞—Ö</li>
                            <li style="margin-bottom: 5px; color: #555; line-height: 1.5;">–î–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–∑–Ω—ã—Ö UI —Å—Ç—Ä—É–∫—Ç—É—Ä</li>
                        </ul>
                    </div>
                    
                    <div style="margin-top: 25px; padding: 15px; background-color: #f5f5f5; border-radius: 8px;">
                        <h3 style="font-size: 16px; color: #666; margin-bottom: 8px;">üì± –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
                        <p style="margin: 3px 0; color: #888; font-size: 14px;">
                            –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è iOS: 17.0<br>
                            –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è –≤–µ—Ä—Å–∏—è iOS: 18.5<br>
                            –†–∞–∑–º–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: ~45 MB
                        </p>
                    </div>
                </div>
                """,
                author: "–ö–æ–º–∞–Ω–¥–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏",
                tags: ["release", "update", "testflight"],
                priority: .high,
                metadata: [
                    "type": "app_release",
                    "contentType": "html",
                    "version": "2.1.1",
                    "build": "206"
                ]
            ),
            FeedItem(
                type: .news,
                title: "–ù–æ–≤—ã–π –∫—É—Ä—Å –ø–æ –º–∞—à–∏–Ω–Ω–æ–º—É –æ–±—É—á–µ–Ω–∏—é",
                content: "–ó–∞–ø—É—â–µ–Ω –Ω–æ–≤—ã–π –∫—É—Ä—Å –ø–æ –æ—Å–Ω–æ–≤–∞–º –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è. –ö—É—Ä—Å –≤–∫–ª—é—á–∞–µ—Ç –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è –∏ –ø—Ä–æ–µ–∫—Ç—ã.",
                author: "–£—á–µ–±–Ω—ã–π –æ—Ç–¥–µ–ª",
                publishedAt: Date().addingTimeInterval(-86400),
                tags: ["–∫—É—Ä—Å—ã", "ML", "–æ–±—É—á–µ–Ω–∏–µ"],
                priority: .normal
            ),
            FeedItem(
                type: .event,
                title: "–í–µ–±–∏–Ω–∞—Ä –ø–æ Swift UI",
                content: "–ü—Ä–∏–≥–ª–∞—à–∞–µ–º –Ω–∞ –≤–µ–±–∏–Ω–∞—Ä –ø–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º SwiftUI. –ù–∞—á–∞–ª–æ –≤ 15:00.",
                author: "HR –æ—Ç–¥–µ–ª",
                publishedAt: Date().addingTimeInterval(-172800),
                tags: ["–≤–µ–±–∏–Ω–∞—Ä", "iOS", "SwiftUI"],
                priority: .normal
            )
        ]
    }
} 