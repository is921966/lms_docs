//
//  Cmi5CourseConverter.swift
//  LMS
//
//  Service for converting Cmi5 packages to managed courses
//

import Foundation

/// –ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä Cmi5 –ø–∞–∫–µ—Ç–æ–≤ –≤ —É–ø—Ä–∞–≤–ª—è–µ–º—ã–µ –∫—É—Ä—Å—ã
@MainActor
class Cmi5CourseConverter {
    
    /// –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç Cmi5 –ø–∞–∫–µ—Ç –≤ —É–ø—Ä–∞–≤–ª—è–µ–º—ã–π –∫—É—Ä—Å
    static func convertToManagedCourse(from package: Cmi5Package) -> ManagedCourse {
        print("üîÑ [Cmi5CourseConverter] Converting package: \(package.title)")
        print("   - Package ID: \(package.id)")
        print("   - Has rootBlock: \(package.manifest.rootBlock != nil)")
        
        // –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏–∑ –ø–∞–∫–µ—Ç–∞
        let activities = collectActivities(from: package)
        print("   - Total activities collected: \(activities.count)")
        for (index, activity) in activities.enumerated() {
            print("     Activity \(index + 1): \(activity.title) (ID: \(activity.activityId))")
        }
        
        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â—É—é –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 30 –º–∏–Ω—É—Ç –Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å)
        let duration = max(1, activities.count / 2) // —á–∞—Å—ã
        
        // –°–æ–∑–¥–∞–µ–º –º–æ–¥—É–ª–∏ –∏–∑ –±–ª–æ–∫–æ–≤ –∏–ª–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π
        let modules = createModules(from: package, activities: activities)
        print("   - Created \(modules.count) modules")
        for (index, module) in modules.enumerated() {
            print("     Module \(index + 1): \(module.title)")
            print("       - contentType: \(module.contentType)")
            print("       - contentUrl: \(String(describing: module.contentUrl))")
        }
        
        return ManagedCourse(
            title: package.title,
            description: package.description ?? "–ö—É—Ä—Å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –∏–∑ Cmi5 –ø–∞–∫–µ—Ç–∞",
            duration: duration,
            status: .published, // Cmi5 –ø–∞–∫–µ—Ç—ã —Å—á–∏—Ç–∞–µ–º –≥–æ—Ç–æ–≤—ã–º–∏ –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
            competencies: [], // –ö–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–∑–∂–µ
            modules: modules,
            createdAt: package.uploadedAt,
            updatedAt: Date(),
            cmi5PackageId: package.id // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–≤—è–∑—å —Å Cmi5 –ø–∞–∫–µ—Ç–æ–º
        )
    }
    
    /// –°–æ–∑–¥–∞–µ—Ç –º–æ–¥—É–ª–∏ –∫—É—Ä—Å–∞ –∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã Cmi5 –ø–∞–∫–µ—Ç–∞
    private static func createModules(from package: Cmi5Package, activities: [Cmi5Activity]) -> [ManagedCourseModule] {
        var modules: [ManagedCourseModule] = []
        
        if let rootBlock = package.manifest.rootBlock {
            // –ï—Å–ª–∏ –µ—Å—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –±–ª–æ–∫–æ–≤, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ—ë
            modules = createModulesFromBlock(rootBlock, order: 0).modules
        } else if !activities.isEmpty {
            // –ï—Å–ª–∏ –Ω–µ—Ç –±–ª–æ–∫–æ–≤, —Å–æ–∑–¥–∞–µ–º –æ–¥–∏–Ω –º–æ–¥—É–ª—å —Å–æ –≤—Å–µ–º–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è–º–∏
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º activityId –ø–µ—Ä–≤–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
            let firstActivityId = activities.first?.activityId
            
            let module = ManagedCourseModule(
                id: UUID(),
                title: "–û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç",
                description: "–í—Å–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∫—É—Ä—Å–∞",
                order: 0,
                contentType: .cmi5,
                contentUrl: firstActivityId,
                duration: activities.count * 30 // 30 –º–∏–Ω—É—Ç –Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            )
            modules.append(module)
        }
        
        // –ï—Å–ª–∏ –º–æ–¥—É–ª–µ–π –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω
        if modules.isEmpty {
            let module = ManagedCourseModule(
                id: UUID(),
                title: package.title,
                description: package.description ?? "",
                order: 0,
                contentType: .cmi5,
                contentUrl: nil, // –ó–¥–µ—Å—å –æ—Å—Ç–∞–≤–ª—è–µ–º nil —Ç–∞–∫ –∫–∞–∫ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π
                duration: 60 // 1 —á–∞—Å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            )
            modules.append(module)
        }
        
        return modules
    }
    
    /// –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ —Å–æ–∑–¥–∞–µ—Ç –º–æ–¥—É–ª–∏ –∏–∑ –±–ª–æ–∫–∞
    private static func createModulesFromBlock(_ block: Cmi5Block, order: Int) -> (modules: [ManagedCourseModule], nextOrder: Int) {
        var modules: [ManagedCourseModule] = []
        var currentOrder = order
        
        // –°–æ–∑–¥–∞–µ–º –º–æ–¥—É–ª—å –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –±–ª–æ–∫–∞ –µ—Å–ª–∏ —É –Ω–µ–≥–æ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        if !block.activities.isEmpty {
            let title = block.title.first?.value ?? "–ú–æ–¥—É–ª—å \(currentOrder + 1)"
            let description = block.description?.first?.value ?? ""
            
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º activityId –ø–µ—Ä–≤–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –±–ª–æ–∫–∞ –∫–∞–∫ contentUrl
            let firstActivityId = block.activities.first?.activityId
            
            let module = ManagedCourseModule(
                id: UUID(),
                title: title,
                description: description,
                order: currentOrder,
                contentType: .cmi5,
                contentUrl: firstActivityId,
                duration: block.activities.count * 30 // 30 –º–∏–Ω—É—Ç –Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
            )
            modules.append(module)
            currentOrder += 1
        }
        
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–ª–æ–∂–µ–Ω–Ω—ã–µ –±–ª–æ–∫–∏
        for subBlock in block.blocks {
            let result = createModulesFromBlock(subBlock, order: currentOrder)
            modules.append(contentsOf: result.modules)
            currentOrder = result.nextOrder
        }
        
        return (modules, currentOrder)
    }
    
    /// –°–æ–±–∏—Ä–∞–µ—Ç –≤—Å–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏–∑ –ø–∞–∫–µ—Ç–∞
    private static func collectActivities(from package: Cmi5Package) -> [Cmi5Activity] {
        guard let rootBlock = package.manifest.rootBlock else { return [] }
        
        var activities: [Cmi5Activity] = []
        
        func collectFromBlock(_ block: Cmi5Block) {
            activities.append(contentsOf: block.activities)
            for subBlock in block.blocks {
                collectFromBlock(subBlock)
            }
        }
        
        collectFromBlock(rootBlock)
        return activities
    }
    
    /// –°–≤—è–∑—ã–≤–∞–µ—Ç –º–æ–¥—É–ª–∏ –∫—É—Ä—Å–∞ —Å Cmi5 –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è–º–∏
    static func linkModulesToActivities(course: ManagedCourse, package: Cmi5Package) -> [(moduleId: UUID, activities: [Cmi5Activity])] {
        var links: [(moduleId: UUID, activities: [Cmi5Activity])] = []
        
        guard let rootBlock = package.manifest.rootBlock else { 
            // –ï—Å–ª–∏ –Ω–µ—Ç –±–ª–æ–∫–æ–≤, —Å–≤—è–∑—ã–≤–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Å –ø–µ—Ä–≤—ã–º –º–æ–¥—É–ª–µ–º
            if let firstModule = course.modules.first {
                let activities = collectActivities(from: package)
                links.append((firstModule.id, activities))
            }
            return links
        }
        
        // –°–æ–ø–æ—Å—Ç–∞–≤–ª—è–µ–º –º–æ–¥—É–ª–∏ —Å –±–ª–æ–∫–∞–º–∏ –ø–æ –ø–æ—Ä—è–¥–∫—É
        var moduleIndex = 0
        
        func linkBlock(_ block: Cmi5Block) {
            if !block.activities.isEmpty && moduleIndex < course.modules.count {
                links.append((course.modules[moduleIndex].id, block.activities))
                moduleIndex += 1
            }
            
            for subBlock in block.blocks {
                linkBlock(subBlock)
            }
        }
        
        linkBlock(rootBlock)
        return links
    }
} 