//
//  Cmi5DemoContent.swift
//  LMS
//
//  Demo content for Cmi5 activities
//

import Foundation
import WebKit

/// –ü—Ä–æ–≤–∞–π–¥–µ—Ä –¥–µ–º–æ-–∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è Cmi5 –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π
public class Cmi5DemoContent {
    
    /// HTML –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è Introduction to AI
    static let introToAIContent = """
    <!DOCTYPE html>
    <html lang="ru">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>–í–≤–µ–¥–µ–Ω–∏–µ –≤ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
                line-height: 1.6;
                margin: 0;
                padding: 20px;
                background-color: #f5f5f7;
            }
            .container {
                max-width: 800px;
                margin: 0 auto;
                background: white;
                padding: 40px;
                border-radius: 10px;
                box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            }
            h1 {
                color: #1d1d1f;
                font-size: 32px;
                margin-bottom: 10px;
            }
            .subtitle {
                color: #6e6e73;
                font-size: 18px;
                margin-bottom: 30px;
            }
            .section {
                margin-bottom: 30px;
            }
            .section h2 {
                color: #1d1d1f;
                font-size: 24px;
                margin-bottom: 15px;
            }
            .progress-bar {
                width: 100%;
                height: 8px;
                background-color: #e5e5e7;
                border-radius: 4px;
                overflow: hidden;
                margin-bottom: 30px;
            }
            .progress-fill {
                height: 100%;
                background-color: #0071e3;
                width: 0%;
                transition: width 0.3s ease;
            }
            .interactive-element {
                background-color: #f5f5f7;
                border: 2px solid #0071e3;
                border-radius: 8px;
                padding: 20px;
                margin: 20px 0;
                cursor: pointer;
                transition: all 0.3s ease;
            }
            .interactive-element:hover {
                background-color: #e8f3ff;
                transform: translateY(-2px);
                box-shadow: 0 4px 12px rgba(0,113,227,0.2);
            }
            .interactive-element.clicked {
                background-color: #d1f3d1;
                border-color: #34c759;
            }
            .button {
                background-color: #0071e3;
                color: white;
                border: none;
                padding: 12px 24px;
                border-radius: 8px;
                font-size: 16px;
                cursor: pointer;
                transition: background-color 0.3s ease;
            }
            .button:hover {
                background-color: #0051d5;
            }
            .quiz-question {
                background-color: #f5f5f7;
                padding: 20px;
                border-radius: 8px;
                margin: 20px 0;
            }
            .quiz-option {
                display: block;
                width: 100%;
                text-align: left;
                padding: 12px 20px;
                margin: 8px 0;
                border: 2px solid #d1d1d6;
                border-radius: 8px;
                background: white;
                cursor: pointer;
                transition: all 0.3s ease;
            }
            .quiz-option:hover {
                border-color: #0071e3;
                background-color: #f8f8f8;
            }
            .quiz-option.selected {
                border-color: #0071e3;
                background-color: #e8f3ff;
            }
            .quiz-option.correct {
                border-color: #34c759;
                background-color: #d1f3d1;
            }
            .quiz-option.incorrect {
                border-color: #ff3b30;
                background-color: #ffd1cf;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <h1>–í–≤–µ–¥–µ–Ω–∏–µ –≤ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç</h1>
            <p class="subtitle">–£—Ä–æ–∫ 1: –û—Å–Ω–æ–≤—ã –ò–ò –∏ –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è</p>
            
            <div class="progress-bar">
                <div class="progress-fill" id="progress"></div>
            </div>
            
            <div class="section">
                <h2>–ß—Ç–æ —Ç–∞–∫–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç?</h2>
                <p>–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç (–ò–ò) ‚Äî —ç—Ç–æ –æ–±–ª–∞—Å—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã—Ö –Ω–∞—É–∫, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è —Å–æ–∑–¥–∞–Ω–∏–µ–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã—Ö –º–∞—à–∏–Ω, —Å–ø–æ—Å–æ–±–Ω—ã—Ö –≤—ã–ø–æ–ª–Ω—è—Ç—å –∑–∞–¥–∞—á–∏, –æ–±—ã—á–Ω–æ —Ç—Ä–µ–±—É—é—â–∏–µ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞.</p>
                
                <div class="interactive-element" onclick="markAsRead(this, 'definition')">
                    <strong>üí° –ö–ª—é—á–µ–≤–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ</strong>
                    <p>–ò–ò –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è –º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ, –æ–±—Ä–∞–±–æ—Ç–∫—É –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞, –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–µ –∑—Ä–µ–Ω–∏–µ –∏ —Ä–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫—É.</p>
                    <small>–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –æ—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ</small>
                </div>
            </div>
            
            <div class="section">
                <h2>–ò—Å—Ç–æ—Ä–∏—è —Ä–∞–∑–≤–∏—Ç–∏—è –ò–ò</h2>
                <p>–†–∞–∑–≤–∏—Ç–∏–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ –Ω–∞—á–∞–ª–æ—Å—å –≤ 1950-—Ö –≥–æ–¥–∞—Ö —Å —Ä–∞–±–æ—Ç –ê–ª–∞–Ω–∞ –¢—å—é—Ä–∏–Ω–≥–∞ –∏ –µ–≥–æ –∑–Ω–∞–º–µ–Ω–∏—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞ –¢—å—é—Ä–∏–Ω–≥–∞.</p>
                
                <div class="interactive-element" onclick="markAsRead(this, 'history')">
                    <strong>üìÖ –ö–ª—é—á–µ–≤—ã–µ –¥–∞—Ç—ã</strong>
                    <ul>
                        <li>1950 - –¢–µ—Å—Ç –¢—å—é—Ä–∏–Ω–≥–∞</li>
                        <li>1956 - –î–∞—Ä—Ç–º—É—Ç—Å–∫–∞—è –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è</li>
                        <li>1997 - Deep Blue –ø–æ–±–µ–∂–¥–∞–µ—Ç –ö–∞—Å–ø–∞—Ä–æ–≤–∞</li>
                        <li>2011 - Watson –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç Jeopardy!</li>
                        <li>2016 - AlphaGo –ø–æ–±–µ–∂–¥–∞–µ—Ç —á–µ–º–ø–∏–æ–Ω–∞ –ø–æ –ì–æ</li>
                    </ul>
                    <small>–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –æ—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ</small>
                </div>
            </div>
            
            <div class="section">
                <h2>–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞–Ω–∏–π</h2>
                <div class="quiz-question">
                    <p><strong>–í–æ–ø—Ä–æ—Å:</strong> –ß—Ç–æ –∏–∑ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω–æ–≥–æ –ù–ï —è–≤–ª—è–µ—Ç—Å—è –æ–±–ª–∞—Å—Ç—å—é –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞?</p>
                    <button class="quiz-option" onclick="selectAnswer(this, false)">–ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ</button>
                    <button class="quiz-option" onclick="selectAnswer(this, false)">–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–µ –∑—Ä–µ–Ω–∏–µ</button>
                    <button class="quiz-option" onclick="selectAnswer(this, true)">–ö–≤–∞–Ω—Ç–æ–≤–∞—è —Ñ–∏–∑–∏–∫–∞</button>
                    <button class="quiz-option" onclick="selectAnswer(this, false)">–û–±—Ä–∞–±–æ—Ç–∫–∞ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞</button>
                </div>
            </div>
            
            <div class="section">
                <h2>–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —É—Ä–æ–∫–∞</h2>
                <p>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã —É—Å–ø–µ—à–Ω–æ –∏–∑—É—á–∏–ª–∏ –æ—Å–Ω–æ–≤—ã –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞.</p>
                <button class="button" onclick="completeLesson()">–ó–∞–≤–µ—Ä—à–∏—Ç—å —É—Ä–æ–∫</button>
            </div>
        </div>
        
        <script>
            // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
            let progress = 0;
            let completedSections = new Set();
            
            function updateProgress() {
                const progressBar = document.getElementById('progress');
                progressBar.style.width = progress + '%';
                
                // –û—Ç–ø—Ä–∞–≤–∫–∞ xAPI statement –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ
                if (window.webkit && window.webkit.messageHandlers.xapi) {
                    window.webkit.messageHandlers.xapi.postMessage({
                        verb: 'progressed',
                        result: {
                            extensions: {
                                'progress': progress / 100
                            }
                        }
                    });
                }
            }
            
            function markAsRead(element, sectionId) {
                if (!completedSections.has(sectionId)) {
                    completedSections.add(sectionId);
                    element.classList.add('clicked');
                    progress += 30;
                    updateProgress();
                }
            }
            
            function selectAnswer(button, isCorrect) {
                // –û—Ç–∫–ª—é—á–∞–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏
                const buttons = button.parentElement.querySelectorAll('.quiz-option');
                buttons.forEach(btn => {
                    btn.disabled = true;
                    btn.style.cursor = 'default';
                });
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                if (isCorrect) {
                    button.classList.add('correct');
                    if (!completedSections.has('quiz')) {
                        completedSections.add('quiz');
                        progress += 40;
                        updateProgress();
                    }
                } else {
                    button.classList.add('incorrect');
                }
            }
            
            function completeLesson() {
                progress = 100;
                updateProgress();
                
                // –û—Ç–ø—Ä–∞–≤–∫–∞ xAPI statement –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
                if (window.webkit && window.webkit.messageHandlers.xapi) {
                    window.webkit.messageHandlers.xapi.postMessage({
                        verb: 'completed',
                        result: {
                            success: true,
                            score: {
                                scaled: 1.0
                            }
                        }
                    });
                }
                
                alert('–£—Ä–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω! –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–∫—Ä—ã—Ç—å —ç—Ç–æ –æ–∫–Ω–æ.');
            }
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
            window.onload = function() {
                // –û—Ç–ø—Ä–∞–≤–∫–∞ xAPI statement –æ–± –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
                if (window.webkit && window.webkit.messageHandlers.xapi) {
                    window.webkit.messageHandlers.xapi.postMessage({
                        verb: 'initialized'
                    });
                }
            };
        </script>
    </body>
    </html>
    """
    
    /// HTML –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è AI Applications
    static let aiApplicationsContent = """
    <!DOCTYPE html>
    <html lang="ru">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ò–ò –≤ —Ä–µ–∞–ª—å–Ω–æ–º –º–∏—Ä–µ</title>
        <style>
            /* –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ –∂–µ —Å—Ç–∏–ª–∏ */
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
                line-height: 1.6;
                margin: 0;
                padding: 20px;
                background-color: #f5f5f7;
            }
            .container {
                max-width: 800px;
                margin: 0 auto;
                background: white;
                padding: 40px;
                border-radius: 10px;
                box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            }
            h1 {
                color: #1d1d1f;
                font-size: 32px;
                margin-bottom: 10px;
            }
            .application-card {
                border: 1px solid #e5e5e7;
                border-radius: 12px;
                padding: 20px;
                margin: 20px 0;
                transition: all 0.3s ease;
            }
            .application-card:hover {
                box-shadow: 0 4px 20px rgba(0,0,0,0.1);
                transform: translateY(-2px);
            }
            .icon {
                font-size: 48px;
                margin-bottom: 10px;
            }
            .progress-indicator {
                display: flex;
                justify-content: space-between;
                margin: 30px 0;
            }
            .progress-step {
                width: 30px;
                height: 30px;
                border-radius: 50%;
                background-color: #e5e5e7;
                display: flex;
                align-items: center;
                justify-content: center;
                font-weight: bold;
                transition: all 0.3s ease;
            }
            .progress-step.completed {
                background-color: #34c759;
                color: white;
            }
            .case-study {
                background-color: #f5f5f7;
                border-left: 4px solid #0071e3;
                padding: 20px;
                margin: 20px 0;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <h1>–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ò–ò –≤ —Ä–µ–∞–ª—å–Ω–æ–º –º–∏—Ä–µ</h1>
            <p class="subtitle">–£—Ä–æ–∫ 2: –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ò–ò</p>
            
            <div class="progress-indicator">
                <div class="progress-step" id="step1">1</div>
                <div class="progress-step" id="step2">2</div>
                <div class="progress-step" id="step3">3</div>
                <div class="progress-step" id="step4">4</div>
            </div>
            
            <div class="section">
                <h2>–û–±–ª–∞—Å—Ç–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ò–ò</h2>
                
                <div class="application-card" onclick="exploreApplication(this, 'healthcare', 1)">
                    <div class="icon">üè•</div>
                    <h3>–ó–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ</h3>
                    <p>–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π, –∞–Ω–∞–ª–∏–∑ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –º–µ–¥–∏—Ü–∏–Ω–∞</p>
                </div>
                
                <div class="application-card" onclick="exploreApplication(this, 'finance', 2)">
                    <div class="icon">üí∞</div>
                    <h3>–§–∏–Ω–∞–Ω—Å—ã</h3>
                    <p>–û–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–∞, –∞–ª–≥–æ—Ä–∏—Ç–º–∏—á–µ—Å–∫–∞—è —Ç–æ—Ä–≥–æ–≤–ª—è, –æ—Ü–µ–Ω–∫–∞ –∫—Ä–µ–¥–∏—Ç–Ω—ã—Ö —Ä–∏—Å–∫–æ–≤</p>
                </div>
                
                <div class="application-card" onclick="exploreApplication(this, 'retail', 3)">
                    <div class="icon">üõçÔ∏è</div>
                    <h3>–†–æ–∑–Ω–∏—á–Ω–∞—è —Ç–æ—Ä–≥–æ–≤–ª—è</h3>
                    <p>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ç–µ–ª—å–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã, —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∞—Å–∞–º–∏, –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –æ–ø—ã—Ç–∞ –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π</p>
                </div>
                
                <div class="application-card" onclick="exploreApplication(this, 'transport', 4)">
                    <div class="icon">üöó</div>
                    <h3>–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç</h3>
                    <p>–ë–µ—Å–ø–∏–ª–æ—Ç–Ω—ã–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏, –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –º–∞—Ä—à—Ä—É—Ç–æ–≤, —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç—Ä–∞—Ñ–∏–∫–æ–º</p>
                </div>
            </div>
            
            <div class="case-study" id="case-study" style="display: none;">
                <h3>–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–∏–º–µ—Ä</h3>
                <p id="case-study-content"></p>
            </div>
            
            <div class="section" id="completion-section" style="display: none;">
                <h2>–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!</h2>
                <p>–í—ã –∏–∑—É—á–∏–ª–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ –æ–±–ª–∞—Å—Ç–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ò–ò –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–º –º–∏—Ä–µ.</p>
                <button class="button" onclick="completeLesson()">–ó–∞–≤–µ—Ä—à–∏—Ç—å —É—Ä–æ–∫</button>
            </div>
        </div>
        
        <script>
            let exploredApplications = new Set();
            
            function updateProgressSteps() {
                for (let i = 1; i <= exploredApplications.size; i++) {
                    document.getElementById('step' + i).classList.add('completed');
                }
                
                if (exploredApplications.size === 4) {
                    document.getElementById('completion-section').style.display = 'block';
                }
            }
            
            function exploreApplication(card, appType, stepNumber) {
                card.style.borderColor = '#34c759';
                card.style.backgroundColor = '#f0fff0';
                
                exploredApplications.add(appType);
                updateProgressSteps();
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä
                const caseStudy = document.getElementById('case-study');
                const content = document.getElementById('case-study-content');
                
                const examples = {
                    healthcare: 'IBM Watson –ø–æ–º–æ–≥–∞–µ—Ç –≤—Ä–∞—á–∞–º –≤ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–µ —Ä–∞–∫–∞, –∞–Ω–∞–ª–∏–∑–∏—Ä—É—è –º–∏–ª–ª–∏–æ–Ω—ã –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –∑–∞–ø–∏—Å–µ–π –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π.',
                    finance: 'JPMorgan –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ò–ò –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, —ç–∫–æ–Ω–æ–º—è 360,000 —á–∞—Å–æ–≤ —Ä–∞–±–æ—Ç—ã —é—Ä–∏—Å—Ç–æ–≤ –≤ –≥–æ–¥.',
                    retail: 'Amazon –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ò–ò –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π, —á—Ç–æ –ø—Ä–∏–Ω–æ—Å–∏—Ç 35% –æ—Ç –æ–±—â–µ–π –≤—ã—Ä—É—á–∫–∏ –∫–æ–º–ø–∞–Ω–∏–∏.',
                    transport: 'Waymo (Google) —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –±–µ—Å–ø–∏–ª–æ—Ç–Ω—ã–µ —Ç–∞–∫—Å–∏, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –ø—Ä–æ–µ—Ö–∞–ª–∏ –º–∏–ª–ª–∏–æ–Ω—ã –∫–∏–ª–æ–º–µ—Ç—Ä–æ–≤ –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ.'
                };
                
                content.textContent = examples[appType];
                caseStudy.style.display = 'block';
                
                // –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
                const progress = (exploredApplications.size / 4) * 100;
                if (window.webkit && window.webkit.messageHandlers.xapi) {
                    window.webkit.messageHandlers.xapi.postMessage({
                        verb: 'progressed',
                        result: {
                            extensions: {
                                'progress': progress / 100
                            }
                        }
                    });
                }
            }
            
            function completeLesson() {
                if (window.webkit && window.webkit.messageHandlers.xapi) {
                    window.webkit.messageHandlers.xapi.postMessage({
                        verb: 'completed',
                        result: {
                            success: true,
                            score: {
                                scaled: 1.0
                            }
                        }
                    });
                }
                
                alert('–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –∫—É—Ä—Å –ø–æ –æ—Å–Ω–æ–≤–∞–º –ò–ò.');
            }
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
            window.onload = function() {
                if (window.webkit && window.webkit.messageHandlers.xapi) {
                    window.webkit.messageHandlers.xapi.postMessage({
                        verb: 'initialized'
                    });
                }
            };
        </script>
    </body>
    </html>
    """
    
    /// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ ID
    static func getContent(for activityId: String) -> String? {
        switch activityId {
        case "intro_to_ai":
            return introToAIContent
        case "ai_applications":
            return aiApplicationsContent
        default:
            return nil
        }
    }
    
    /// –°–æ–∑–¥–∞–µ—Ç Data URL –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    static func getDataURL(for activityId: String) -> URL? {
        guard let content = getContent(for: activityId),
              let data = content.data(using: .utf8) else {
            return nil
        }
        
        let base64 = data.base64EncodedString()
        let urlString = "data:text/html;base64,\(base64)"
        return URL(string: urlString)
    }
} 