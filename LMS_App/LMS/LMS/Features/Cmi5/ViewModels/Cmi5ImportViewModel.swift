//
//  Cmi5ImportViewModel.swift
//  LMS
//
//  Created on Sprint 40 Day 1 - Cmi5 Integration
//

import Foundation
import SwiftUI
import Combine

/// –û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
enum ValidationError: LocalizedError {
    case fileAccessDenied
    case fileTooLarge(size: Int64, maxSize: Int64)
    case invalidFormat
    case missingManifest
    
    var errorDescription: String? {
        switch self {
        case .fileAccessDenied:
            return "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –∑–∞–Ω–æ–≤–æ."
        case .fileTooLarge(let size, let maxSize):
            let formatter = ByteCountFormatter()
            formatter.countStyle = .file
            let sizeStr = formatter.string(fromByteCount: size)
            let maxSizeStr = formatter.string(fromByteCount: maxSize)
            return "–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π (\(sizeStr)). –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: \(maxSizeStr)"
        case .invalidFormat:
            return "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞. –û–∂–∏–¥–∞–µ—Ç—Å—è ZIP –∞—Ä—Ö–∏–≤ —Å Cmi5 –ø–∞–∫–µ—Ç–æ–º."
        case .missingManifest:
            return "–í –∞—Ä—Ö–∏–≤–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª –º–∞–Ω–∏—Ñ–µ—Å—Ç–∞ cmi5.xml"
        }
    }
}

/// –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ
struct FileInfo {
    let name: String
    let size: Int64
    let type: String
    let url: URL
    
    var formattedSize: String {
        let formatter = ByteCountFormatter()
        formatter.countStyle = .file
        return formatter.string(fromByteCount: size)
    }
}

/// ViewModel –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ Cmi5 –ø–∞–∫–µ—Ç–æ–≤
@MainActor
final class Cmi5ImportViewModel: ObservableObject {
    
    // MARK: - Published Properties
    
    @Published var selectedFileInfo: FileInfo?
    @Published var isProcessing = false
    @Published var processingProgress: String?
    @Published var parsedPackage: Cmi5Package?
    @Published var importedPackage: Cmi5Package?
    @Published var error: String?
    @Published var validationWarnings: [String] = []
    
    // MARK: - Properties
    
    var courseId: UUID?
    private let parser = Cmi5Parser()
    private let cmi5Service = Cmi5Service.shared // –ò—Å–ø–æ–ª—å–∑—É–µ–º shared instance
    private let maxFileSize: Int64 = 500 * 1024 * 1024 // 500 MB
    
    // MARK: - Computed Properties
    
    var canImport: Bool {
        parsedPackage != nil && 
        !isProcessing && 
        error == nil &&
        parsedPackage?.isValid == true
    }
    
    // MARK: - Public Methods
    
    /// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
    func processFile(at url: URL) async {
        await MainActor.run {
            self.error = nil
            self.validationWarnings = []
            self.isProcessing = true
            self.processingProgress = "–ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞..."
        }
        
        do {
            // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ —Ñ–∞–π–ª—É
            guard url.startAccessingSecurityScopedResource() else {
                throw ValidationError.fileAccessDenied
            }
            defer { url.stopAccessingSecurityScopedResource() }
            
            // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
            let attributes = try FileManager.default.attributesOfItem(atPath: url.path)
            let fileSize = attributes[.size] as? Int64 ?? 0
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
            if fileSize > maxFileSize {
                throw ValidationError.fileTooLarge(size: fileSize, maxSize: maxFileSize)
            }
            
            // –°–æ–∑–¥–∞–µ–º FileInfo
            let fileInfo = FileInfo(
                name: url.lastPathComponent,
                size: fileSize,
                type: "ZIP Archive",
                url: url
            )
            
            await MainActor.run {
                self.selectedFileInfo = fileInfo
                self.processingProgress = "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä—Ö–∏–≤–∞..."
            }
            
            // –ü–∞—Ä—Å–∏–º –ø–∞–∫–µ—Ç
            let parseResult = try await parser.parsePackage(from: url)
            
            await MainActor.run {
                self.parsedPackage = parseResult
                self.validationWarnings = []
                self.isProcessing = false
                self.processingProgress = nil
            }
            
        } catch {
            await MainActor.run {
                self.error = error.localizedDescription
                self.isProcessing = false
                self.processingProgress = nil
            }
        }
    }
    
    /// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —É–∂–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
    func processSelectedFile() async {
        guard let fileInfo = selectedFileInfo else { return }
        await processFile(at: fileInfo.url)
    }
    
    /// –û—á–∏—â–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
    func clearSelection() {
        selectedFileInfo = nil
        parsedPackage = nil
        error = nil
        validationWarnings = []
    }
    
    /// –û—á–∏—â–∞–µ—Ç –æ—à–∏–±–∫—É
    func clearError() {
        error = nil
    }
    
    // MARK: - File Processing
    
    /// Process selected file
    func processFile(_ url: URL) async {
        selectedFileInfo = FileInfo(
            name: url.lastPathComponent,
            size: (try? FileManager.default.attributesOfItem(atPath: url.path)[.size] as? Int64) ?? 0,
            type: "ZIP Archive",
            url: url
        )
        
        isProcessing = true
        processingProgress = "–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞..."
        
        do {
            let parseResult = try await parser.parsePackage(from: url)
            parsedPackage = parseResult
            processingProgress = "–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω"
            
            DispatchQueue.main.asyncAfter(deadline: .now() + 1) {
                self.isProcessing = false
                self.processingProgress = nil
            }
        } catch {
            self.error = "–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞: \(error.localizedDescription)"
            isProcessing = false
            processingProgress = nil
        }
    }
    
    // MARK: - Demo Functions
    
    /// Load demo course by filename
    func loadDemoCourse(_ demoCourse: DemoCourse) {
        print("üéØ Cmi5ImportViewModel: Loading demo course: \(demoCourse.name)")
        
        // –ü—Ä–æ–±—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ø–æ—Å–æ–±–æ–≤ –ø–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª
        var demoFileURL: URL?
        
        // 1. –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–∑ Documents (–µ—Å–ª–∏ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω)
        if let documentsURL = DemoCourseManager.shared.getDocumentsURL(for: demoCourse) {
            print("‚úÖ Demo course found in Documents: \(documentsURL.path)")
            demoFileURL = documentsURL
        }
        // 2. –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ Documents, –ø—Ä–æ–±—É–µ–º –∏–∑ bundle
        else if let bundleURL = DemoCourseManager.shared.getBundleURL(for: demoCourse) {
            print("‚úÖ Demo course found in bundle: \(bundleURL.path)")
            demoFileURL = bundleURL
        }
        // 3. –ï—Å–ª–∏ –≤—Å–µ –µ—â–µ –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        else if let tempURL = DemoCourseManager.shared.createTemporaryDemoCourse(for: demoCourse) {
            print("‚ö†Ô∏è Using temporary demo course: \(tempURL.path)")
            demoFileURL = tempURL
        }
        
        guard let fileURL = demoFileURL else {
            print("‚ùå Demo course file not found anywhere: \(demoCourse.filename)")
            error = "Demo course file not found"
            return
        }
        
        // Process the file
        selectedFileInfo = FileInfo(
            name: "\(demoCourse.filename).zip",
            size: (try? FileManager.default.attributesOfItem(atPath: fileURL.path)[.size] as? Int64) ?? 0,
            type: "ZIP Archive",
            url: fileURL
        )
        
        Task {
            await processFile(fileURL)
        }
    }
    
    /// Select demo file for testing (deprecated - use loadDemoCourse instead)
    func selectDemoFile() {
        // For backward compatibility, load the AI Fluency course
        if let aiCourse = DemoCourse.allCourses.first {
            loadDemoCourse(aiCourse)
        }
    }
    
    /// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –ø–∞–∫–µ—Ç –≤ —Å–∏—Å—Ç–µ–º—É
    func importPackage() async {
        guard let package = parsedPackage,
              let fileInfo = selectedFileInfo else { 
            print("üîç CMI5 VM: Import cancelled - no package or file info")
            return 
        }
        
        print("üîç CMI5 VM: Starting import of package: \(package.title)")
        isProcessing = true
        processingProgress = "–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–∞–∫–µ—Ç–∞..."
        
        do {
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–∏—Å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
            print("üîç CMI5 VM: Calling cmi5Service.importPackage()...")
            let result = try await cmi5Service.importPackage(
                from: fileInfo.url,
                courseId: courseId,
                uploadedBy: UUID() // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —ç—Ç–æ –±—É–¥–µ—Ç ID —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            )
            
            print("üîç CMI5 VM: Import successful! Package ID: \(result.package.id)")
            self.importedPackage = result.package
            processingProgress = "–ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!"
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è, –µ—Å–ª–∏ –µ—Å—Ç—å
            if !result.warnings.isEmpty {
                print("üîç CMI5 VM: Import warnings: \(result.warnings)")
                self.validationWarnings = result.warnings
            }
            
        } catch {
            print("üîç CMI5 VM: Import failed: \(error)")
            self.error = "–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: \(error.localizedDescription)"
        }
        
        isProcessing = false
    }
    
    // MARK: - Private Methods
    
    private func reset() {
        selectedFileInfo = nil
        parsedPackage = nil
        importedPackage = nil
        error = nil
        validationWarnings = []
        processingProgress = nil
    }
    
    private func parsePackage(from url: URL) async {
        isProcessing = true
        processingProgress = "–†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –∞—Ä—Ö–∏–≤–∞..."
        
        do {
            // –ü–∞—Ä—Å–∏–º –ø–∞–∫–µ—Ç
            let parseResult = try await parser.parsePackage(from: url)
            
            await MainActor.run {
                self.parsedPackage = parseResult
                self.validationWarnings = []
                self.isProcessing = false
                self.processingProgress = nil
            }
            
        } catch {
            await MainActor.run {
                if let parsingError = error as? Cmi5Parser.ParsingError {
                    self.error = parsingError.errorDescription
                } else {
                    self.error = "–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞: \(error.localizedDescription)"
                }
                self.isProcessing = false
                self.processingProgress = nil
            }
        }
    }
    
    /// –°–æ–∑–¥–∞–µ—Ç –¥–µ–º–æ-–ø–∞–∫–µ—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    private func createDemoPackage() -> Cmi5Package {
        let activities = [
            Cmi5Activity(
                id: UUID(),
                packageId: UUID(),
                activityId: "module_1",
                title: "–í–≤–µ–¥–µ–Ω–∏–µ –≤ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—É—é –∫—É–ª—å—Ç—É—Ä—É",
                description: "–ë–∞–∑–æ–≤—ã–π –º–æ–¥—É–ª—å –æ —Ü–µ–Ω–Ω–æ—Å—Ç—è—Ö –∏ –ø—Ä–∏–Ω—Ü–∏–ø–∞—Ö –∫–æ–º–ø–∞–Ω–∏–∏",
                launchUrl: "content/module1/index.html",
                launchMethod: .anyWindow,
                moveOn: .completedOrPassed,
                masteryScore: 0.8,
                activityType: "http://adlnet.gov/expapi/activities/module",
                duration: "PT30M" // 30 –º–∏–Ω—É—Ç
            ),
            Cmi5Activity(
                id: UUID(),
                packageId: UUID(),
                activityId: "quiz_1",
                title: "–¢–µ—Å—Ç: –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ü–µ–Ω–Ω–æ—Å—Ç–∏",
                description: "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞–Ω–∏–π –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö —Ü–µ–Ω–Ω–æ—Å—Ç–µ–π",
                launchUrl: "content/quiz1/index.html",
                launchMethod: .ownWindow,
                moveOn: .passed,
                masteryScore: 0.75,
                activityType: "http://adlnet.gov/expapi/activities/assessment",
                duration: "PT15M" // 15 –º–∏–Ω—É—Ç
            ),
            Cmi5Activity(
                id: UUID(),
                packageId: UUID(),
                activityId: "video_1",
                title: "–í–∏–¥–µ–æ: –ò—Å—Ç–æ—Ä–∏—è –∫–æ–º–ø–∞–Ω–∏–∏",
                description: "–î–æ–∫—É–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π —Ñ–∏–ª—å–º –æ–± –∏—Å—Ç–æ—Ä–∏–∏ —Ä–∞–∑–≤–∏—Ç–∏—è –∫–æ–º–ø–∞–Ω–∏–∏",
                launchUrl: "content/video1/index.html",
                launchMethod: .anyWindow,
                moveOn: .completed,
                masteryScore: nil,
                activityType: "http://adlnet.gov/expapi/activities/media",
                duration: "PT45M" // 45 –º–∏–Ω—É—Ç
            )
        ]
        
        // –°–æ–∑–¥–∞–µ–º –±–ª–æ–∫ —Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è–º–∏
        let rootBlock = Cmi5Block(
            id: "block_main",
            title: [Cmi5LangString(lang: "ru", value: "–û—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏")],
            activities: activities
        )
        
        let course = Cmi5Course(
            id: "course_001",
            title: [Cmi5LangString(lang: "ru", value: "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∞—è –∫—É–ª—å—Ç—É—Ä–∞ –¶–£–ú")],
            description: [Cmi5LangString(lang: "ru", value: "–ë–∞–∑–æ–≤—ã–π –∫—É—Ä—Å –¥–ª—è –Ω–æ–≤—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤")],
            auCount: activities.count,
            rootBlock: rootBlock
        )
        
        let manifest = Cmi5Manifest(
            identifier: "course_corporate_culture_v1",
            title: "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∞—è –∫—É–ª—å—Ç—É—Ä–∞ –¶–£–ú",
            description: "–ë–∞–∑–æ–≤—ã–π –∫—É—Ä—Å –¥–ª—è –Ω–æ–≤—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –æ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–π –∫—É–ª—å—Ç—É—Ä–µ",
            moreInfo: "https://lms.tsum.ru/courses/corporate-culture",
            vendor: Cmi5Vendor(
                name: "–¶–£–ú Learning & Development",
                contact: "learning@tsum.ru",
                url: "https://lms.tsum.ru"
            ),
            version: "1.0.0",
            course: course
        )
        
        return Cmi5Package(
            packageId: manifest.identifier,
            title: manifest.title,
            description: manifest.description,
            courseId: courseId,
            manifest: manifest,
            filePath: "/demo/package.zip",
            size: selectedFileInfo?.size ?? 0,
            uploadedBy: UUID() // –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        )
    }
}

// MARK: - Extensions

// empty() method is defined in Cmi5Models.swift 