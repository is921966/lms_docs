#!/bin/bash

echo "üîç –ê–Ω–∞–ª–∏–∑ –ø–æ–∫—Ä—ã—Ç–∏—è –∫–æ–¥–∞ –ø—Ä–æ–µ–∫—Ç–∞ LMS..."
echo "========================================"

# Count total lines in main app code
echo "ÔøΩÔøΩ –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (LMS/):"
APP_LINES=$(find LMS -name "*.swift" -type f \
    -not -path "*/Tests/*" \
    -not -path "*/LMSTests/*" \
    -not -path "*/LMSUITests/*" \
    -exec wc -l {} + | tail -1 | awk '{print $1}')
echo "  –í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫ –∫–æ–¥–∞: $APP_LINES"

# Count lines by category
echo ""
echo "üìÇ –ü–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:"
echo "  - Services: $(find LMS/Services -name "*.swift" -exec wc -l {} + 2>/dev/null | tail -1 | awk '{print $1}') —Å—Ç—Ä–æ–∫"
echo "  - Views: $(find LMS/Views -name "*.swift" -exec wc -l {} + 2>/dev/null | tail -1 | awk '{print $1}') —Å—Ç—Ä–æ–∫"
echo "  - ViewModels: $(find LMS/ViewModels -name "*.swift" -exec wc -l {} + 2>/dev/null | tail -1 | awk '{print $1}') —Å—Ç—Ä–æ–∫"
echo "  - Models: $(find LMS/Models -name "*.swift" -exec wc -l {} + 2>/dev/null | tail -1 | awk '{print $1}') —Å—Ç—Ä–æ–∫"
echo "  - Features: $(find LMS/Features -name "*.swift" -exec wc -l {} + 2>/dev/null | tail -1 | awk '{print $1}') —Å—Ç—Ä–æ–∫"

# Count test lines
echo ""
echo "üß™ –¢–µ—Å—Ç—ã (LMSTests/):"
TEST_LINES=$(find LMSTests -name "*.swift" -type f -exec wc -l {} + 2>/dev/null | tail -1 | awk '{print $1}')
echo "  –í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫ —Ç–µ—Å—Ç–æ–≤: $TEST_LINES"

# Count test files
echo ""
echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–µ—Å—Ç–æ–≤:"
echo "  - –¢–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤: $(find LMSTests -name "*Tests.swift" -type f | wc -l)"
echo "  - ViewModels —Ç–µ—Å—Ç—ã: $(find LMSTests/ViewModels -name "*Tests.swift" 2>/dev/null | wc -l)"
echo "  - Services —Ç–µ—Å—Ç—ã: $(find LMSTests/Services -name "*Tests.swift" 2>/dev/null | wc -l)"
echo "  - Views —Ç–µ—Å—Ç—ã: $(find LMSTests/Views -name "*Tests.swift" 2>/dev/null | wc -l)"
echo "  - Models —Ç–µ—Å—Ç—ã: $(find LMSTests/Models -name "*Tests.swift" 2>/dev/null | wc -l)"

# Estimate coverage
echo ""
echo "üìà –û—Ü–µ–Ω–∫–∞ –ø–æ–∫—Ä—ã—Ç–∏—è:"
if [ $APP_LINES -gt 0 ]; then
    COVERAGE_RATIO=$(echo "scale=2; $TEST_LINES * 100 / $APP_LINES" | bc)
    echo "  –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ç–µ—Å—Ç/–∫–æ–¥: ${COVERAGE_RATIO}%"
    
    # Rough estimate: 1 line of test covers ~3 lines of code
    ESTIMATED_COVERAGE=$(echo "scale=2; $TEST_LINES * 3 * 100 / $APP_LINES" | bc)
    if (( $(echo "$ESTIMATED_COVERAGE > 100" | bc -l) )); then
        ESTIMATED_COVERAGE="100"
    fi
    echo "  –ü—Ä–∏–º–µ—Ä–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ: ~${ESTIMATED_COVERAGE}%"
fi

# Count TODO/FIXME
echo ""
echo "‚ö†Ô∏è  –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –¥–æ–ª–≥:"
echo "  - TODO: $(grep -r "TODO:" LMS --include="*.swift" 2>/dev/null | wc -l)"
echo "  - FIXME: $(grep -r "FIXME:" LMS --include="*.swift" 2>/dev/null | wc -l)"

echo ""
echo "========================================"
echo "üìù –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –≠—Ç–æ –≥—Ä—É–±–∞—è –æ—Ü–µ–Ω–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å—Ç—Ä–æ–∫."
echo "–î–ª—è —Ç–æ—á–Ω–æ–≥–æ –ø–æ–∫—Ä—ã—Ç–∏—è –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫–∏ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ —Ç–µ—Å—Ç–æ–≤."
