#!/bin/sh

# Xcode Cloud Post-Clone Script
# This script runs after Xcode Cloud clones the repository

set -e  # Exit on error

echo "🚀 Starting Xcode Cloud post-clone setup..."
echo "📍 Repository: $CI_PRIMARY_REPOSITORY_PATH"
echo "🔢 Build Number: $CI_BUILD_NUMBER"
echo "🌿 Branch: $CI_BRANCH"

# Navigate to project directory
cd "$CI_PRIMARY_REPOSITORY_PATH/LMS_App/LMS"

# Install Ruby dependencies if Gemfile exists
if [ -f "Gemfile" ]; then
    echo "💎 Installing Ruby dependencies..."
    gem install bundler --no-document
    bundle install
fi

# Install CocoaPods if Podfile exists
if [ -f "Podfile" ]; then
    echo "📦 Installing CocoaPods dependencies..."
    bundle exec pod install
fi

# Create Config directory if it doesn't exist
mkdir -p Config

# Generate build configuration
echo "🔧 Generating build configuration..."
cat > Config/BuildConfig.swift << EOF
// Auto-generated by Xcode Cloud
// Build Number: $CI_BUILD_NUMBER
// Branch: $CI_BRANCH

import Foundation

struct BuildConfig {
    static let buildNumber = "$CI_BUILD_NUMBER"
    static let branch = "$CI_BRANCH"
    static let buildDate = "\$(date +%Y-%m-%d)"
    static let environment = "$CI_XCODEBUILD_ACTION"
    static let isCI = true
}
EOF

# Update Info.plist with build number if archiving
if [ "$CI_XCODEBUILD_ACTION" = "archive" ]; then
    echo "📝 Updating build number to $CI_BUILD_NUMBER..."
    /usr/libexec/PlistBuddy -c "Set :CFBundleVersion $CI_BUILD_NUMBER" "$CI_PRIMARY_REPOSITORY_PATH/LMS_App/LMS/LMS/Info.plist"
fi

# Run any custom setup scripts
if [ -f "Scripts/setup.sh" ]; then
    echo "🔨 Running custom setup..."
    ./Scripts/setup.sh
fi

echo "✅ Post-clone setup completed successfully!" 