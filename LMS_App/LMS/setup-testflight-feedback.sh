#!/bin/bash

# TestFlight Feedback Automation - Automatic Setup Script
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –≤—Å—é —Å–∏—Å—Ç–µ–º—É –∑–∞ 1 –º–∏–Ω—É—Ç—É!

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}================================================${NC}"
echo -e "${BLUE}üöÄ TestFlight Feedback Automation Setup${NC}"
echo -e "${BLUE}================================================${NC}"
echo ""

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ —Å–∫—Ä–∏–ø—Ç—É
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
cd "$SCRIPT_DIR"

# –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
echo -e "${YELLOW}üìÅ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π...${NC}"
mkdir -p scripts
mkdir -p fastlane/actions
mkdir -p private_keys
echo -e "${GREEN}‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã${NC}"

# –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º Python
echo -e "\n${YELLOW}üêç –ü—Ä–æ–≤–µ—Ä—è–µ–º Python...${NC}"
if command -v python3 &> /dev/null; then
    PYTHON_VERSION=$(python3 --version 2>&1 | grep -oE '[0-9]+\.[0-9]+')
    echo -e "${GREEN}‚úÖ Python –Ω–∞–π–¥–µ–Ω: $(python3 --version)${NC}"
else
    echo -e "${RED}‚ùå Python 3 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!${NC}"
    echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3: brew install python3"
    exit 1
fi

# –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º pip
echo -e "\n${YELLOW}üì¶ –ü—Ä–æ–≤–µ—Ä—è–µ–º pip...${NC}"
if ! command -v pip3 &> /dev/null; then
    echo -e "${YELLOW}–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º pip...${NC}"
    curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
    python3 get-pip.py
    rm get-pip.py
fi
echo -e "${GREEN}‚úÖ pip –≥–æ—Ç–æ–≤${NC}"

# –®–∞–≥ 4: –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo -e "\n${YELLOW}üì• –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...${NC}"
cd scripts
if [ ! -f "requirements.txt" ]; then
    echo "PyJWT==2.8.0" > requirements.txt
    echo "cryptography==41.0.7" >> requirements.txt
    echo "requests==2.31.0" >> requirements.txt
fi

pip3 install -r requirements.txt --quiet
echo -e "${GREEN}‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}"

# –®–∞–≥ 5: –°–æ–∑–¥–∞–µ–º .env.local –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
echo -e "\n${YELLOW}‚öôÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é...${NC}"
if [ ! -f ".env.local" ]; then
    if [ -f "env.example" ]; then
        cp env.example .env.local
        echo -e "${GREEN}‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env.local${NC}"
        echo -e "${YELLOW}üìù –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å .env.local –≤–∞—à–∏–º–∏ –∫–ª—é—á–∞–º–∏ API${NC}"
    fi
else
    echo -e "${GREEN}‚úÖ –§–∞–π–ª .env.local —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç${NC}"
fi

# –®–∞–≥ 6: –ü—Ä–æ–≤–µ—Ä—è–µ–º Fastlane
cd ..
echo -e "\n${YELLOW}üèÉ –ü—Ä–æ–≤–µ—Ä—è–µ–º Fastlane...${NC}"
if ! command -v fastlane &> /dev/null; then
    echo -e "${YELLOW}–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Fastlane...${NC}"
    if command -v gem &> /dev/null; then
        sudo gem install fastlane -NV
    else
        echo -e "${RED}‚ùå Ruby –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Fastlane –≤—Ä—É—á–Ω—É—é${NC}"
    fi
else
    echo -e "${GREEN}‚úÖ Fastlane —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(fastlane --version | head -1)${NC}"
fi

# –®–∞–≥ 7: –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
echo -e "\n${YELLOW}üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏...${NC}"
FILES_OK=true

if [ ! -f "scripts/fetch_testflight_feedback.py" ]; then
    echo -e "${RED}‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç: scripts/fetch_testflight_feedback.py${NC}"
    FILES_OK=false
fi

if [ ! -f "scripts/fetch-feedback.sh" ]; then
    echo -e "${RED}‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç: scripts/fetch-feedback.sh${NC}"
    FILES_OK=false
fi

if [ ! -f "fastlane/actions/fetch_testflight_feedback.rb" ]; then
    echo -e "${RED}‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç: fastlane/actions/fetch_testflight_feedback.rb${NC}"
    FILES_OK=false
fi

if [ "$FILES_OK" = true ]; then
    echo -e "${GREEN}‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã –Ω–∞ –º–µ—Å—Ç–µ${NC}"
else
    echo -e "${RED}–ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ–∞–π–ª—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É.${NC}"
fi

# –®–∞–≥ 8: –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–ø—Ç—ã –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º–∏
echo -e "\n${YELLOW}üîß –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞...${NC}"
chmod +x scripts/fetch-feedback.sh 2>/dev/null || true
chmod +x scripts/fetch_testflight_feedback.py 2>/dev/null || true
echo -e "${GREEN}‚úÖ –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã${NC}"

# –®–∞–≥ 9: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
echo -e "\n${YELLOW}üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é...${NC}"
cd scripts
if [ -f ".env.local" ]; then
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –ª–∏ –∫–ª—é—á–∏
    if grep -q "XXXXXXXXXX" .env.local; then
        echo -e "${YELLOW}‚ö†Ô∏è –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å API –∫–ª—é—á–∏ –≤ .env.local${NC}"
        READY=false
    else
        echo -e "${GREEN}‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤—ã–≥–ª—è–¥–∏—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π${NC}"
        READY=true
    fi
else
    echo -e "${RED}‚ùå –§–∞–π–ª .env.local –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    READY=false
fi

# –®–∞–≥ 10: –°–æ–∑–¥–∞–µ–º helper —Å–∫—Ä–∏–ø—Ç
echo -e "\n${YELLOW}üìù –°–æ–∑–¥–∞–µ–º helper –∫–æ–º–∞–Ω–¥—ã...${NC}"
cd "$SCRIPT_DIR"
cat > testflight-feedback << 'EOF'
#!/bin/bash
# TestFlight Feedback Helper

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"

case "$1" in
    setup)
        "$SCRIPT_DIR/setup-testflight-feedback.sh"
        ;;
    fetch)
        cd "$SCRIPT_DIR/scripts" && ./fetch-feedback.sh ${@:2}
        ;;
    test)
        cd "$SCRIPT_DIR/scripts"
        echo "üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é..."
        python3 -c "import jwt, requests; print('‚úÖ Python –º–æ–¥—É–ª–∏ —Ä–∞–±–æ—Ç–∞—é—Ç')"
        if [ -f ".env.local" ]; then
            echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞–π–¥–µ–Ω–∞"
        else
            echo "‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
        fi
        ;;
    help|*)
        echo "TestFlight Feedback Automation"
        echo ""
        echo "Usage: ./testflight-feedback [command]"
        echo ""
        echo "Commands:"
        echo "  setup   - –ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É"
        echo "  fetch   - –ü–æ–ª—É—á–∏—Ç—å feedback –∏–∑ TestFlight"
        echo "  test    - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É"
        echo "  help    - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
        ;;
esac
EOF

chmod +x testflight-feedback
echo -e "${GREEN}‚úÖ Helper –∫–æ–º–∞–Ω–¥–∞ —Å–æ–∑–¥–∞–Ω–∞${NC}"

# –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
echo ""
echo -e "${BLUE}================================================${NC}"
echo -e "${BLUE}üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–∫–∏${NC}"
echo -e "${BLUE}================================================${NC}"
echo ""

if [ "$READY" = true ] && [ "$FILES_OK" = true ]; then
    echo -e "${GREEN}‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!${NC}"
    echo ""
    echo -e "${YELLOW}–ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–∏–µ feedback:${NC}"
    echo -e "  ${BLUE}cd scripts && ./fetch-feedback.sh${NC}"
    echo ""
    echo -e "${YELLOW}–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ helper:${NC}"
    echo -e "  ${BLUE}./testflight-feedback fetch${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è –°–∏—Å—Ç–µ–º–∞ –ø–æ—á—Ç–∏ –≥–æ—Ç–æ–≤–∞!${NC}"
    echo ""
    echo -e "${YELLOW}–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å:${NC}"
    
    if [ ! -f "scripts/.env.local" ] || grep -q "XXXXXXXXXX" "scripts/.env.local" 2>/dev/null; then
        echo -e "1. ${RED}–ó–∞–ø–æ–ª–Ω–∏—Ç—å API –∫–ª—é—á–∏ –≤ scripts/.env.local${NC}"
        echo ""
        echo "   –ü–æ–ª—É—á–∏—Ç–µ –∫–ª—é—á–∏ –≤ App Store Connect:"
        echo "   https://appstoreconnect.apple.com"
        echo "   Users and Access ‚Üí Keys ‚Üí App Store Connect API"
        echo ""
        echo "   –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª:"
        echo -e "   ${BLUE}open scripts/.env.local${NC}"
    fi
    
    if [ "$FILES_OK" = false ]; then
        echo -e "2. ${RED}–£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –≤—Å–µ —Ñ–∞–π–ª—ã –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –Ω–∞ –º–µ—Å—Ç–µ${NC}"
    fi
fi

echo ""
echo -e "${BLUE}üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:${NC}"
echo "  - –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç: TESTFLIGHT_FEEDBACK_QUICKSTART.md"
echo "  - –ü–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ: TESTFLIGHT_FEEDBACK_AUTOMATION.md"
echo ""

# –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
if [ "$READY" = false ] && [ -f "scripts/.env.local" ]; then
    echo -e "${YELLOW}–û—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏? (y/n)${NC}"
    read -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        open scripts/.env.local
    fi
fi

echo -e "${GREEN}‚ú® –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}" 