# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  before_all do
    # Set up App Store Connect API if running in CI
    if ENV['CI']
      app_store_connect_api_key(
        key_id: ENV['APP_STORE_CONNECT_API_KEY_ID'],
        issuer_id: ENV['APP_STORE_CONNECT_API_KEY_ISSUER_ID'],
        key_content: ENV['APP_STORE_CONNECT_API_KEY_KEY'],
        is_key_content_base64: true,
        in_house: false
      )
    end
  end

  desc "Run tests"
  lane :test do
    run_tests(
      scheme: "LMS",
      xcodeproj: "LMS.xcodeproj",
      clean: true,
      devices: ["iPhone 15"],
      skip_build: false,
      code_coverage: true
    )
  end

  desc "Build and upload to TestFlight"
  lane :beta do
    # Don't check git status in CI
    unless ENV['CI']
      ensure_git_status_clean
    end
    
    # Get latest build number from TestFlight
    latest_build = latest_testflight_build_number(
      app_identifier: "ru.tsum.lms.igor",
      initial_build_number: 0
    )
    
    # Increment build number
    increment_build_number(
      build_number: latest_build + 1,
      xcodeproj: "LMS.xcodeproj"
    )
    
    # Build the app
    build_app(
      scheme: "LMS",
      xcodeproj: "LMS.xcodeproj",
      clean: true,
      export_method: "app-store",
      output_directory: "./build",
      output_name: "LMS.ipa",
      skip_profile_detection: ENV['CI'] ? true : false,
      export_options: ENV['CI'] ? {
        provisioningProfiles: {
          "ru.tsum.lms.igor" => "match AppStore ru.tsum.lms.igor"
        }
      } : nil
    )
    
    # Upload to TestFlight
    upload_to_testflight(
      skip_waiting_for_build_processing: true,
      changelog: ENV['CI'] ? "Automated build from CI" : "Bug fixes and improvements",
      distribute_external: false,
      notify_external_testers: false
    )
    
    # Commit the version bump only if not in CI
    unless ENV['CI']
      commit_version_bump(
        message: "Version Bump",
        xcodeproj: "LMS.xcodeproj"
      )
    end
  end

  desc "Deploy to App Store"
  lane :release do
    # Build the app
    build_app(
      scheme: "LMS",
      xcodeproj: "LMS.xcodeproj",
      clean: true,
      export_method: "app-store"
    )
    
    # Upload to App Store
    upload_to_app_store(
      skip_metadata: false,
      skip_screenshots: false,
      submit_for_review: false,
      force: true,
      precheck_include_in_app_purchases: false
    )
  end

  desc "Create a new build without uploading"
  lane :build do
    build_app(
      scheme: "LMS",
      xcodeproj: "LMS.xcodeproj",
      clean: true,
      export_method: "app-store",
      output_directory: "./build",
      output_name: "LMS.ipa"
    )
  end
end
