#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è LMS –Ω–∞ —Å–∏–º—É–ª—è—Ç–æ—Ä–µ
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./local-test.sh

echo "üöÄ –ó–∞–ø—É—Å–∫ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è LMS..."
echo ""

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
PROJECT="LMS.xcodeproj"
SCHEME="LMS"
SIMULATOR="iPhone 16 Pro"
OS_VERSION="18.5"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
check_status() {
    if [ $? -ne 0 ]; then
        echo "‚ùå $1"
        exit 1
    fi
    echo "‚úÖ $1"
}

# 1. –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –±–∏–ª–¥–æ–≤
echo "üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –±–∏–ª–¥–æ–≤..."
rm -rf ~/Library/Developer/Xcode/DerivedData/LMS-*
check_status "–û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

# 2. –°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è —Å–∏–º—É–ª—è—Ç–æ—Ä–∞
echo "üî® –°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
echo "   –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ xcpretty
if command -v xcpretty &> /dev/null; then
    xcodebuild build \
        -project "$PROJECT" \
        -scheme "$SCHEME" \
        -destination "platform=iOS Simulator,name=$SIMULATOR,OS=$OS_VERSION" \
        -configuration Debug \
        CODE_SIGNING_REQUIRED=NO \
        CODE_SIGN_IDENTITY="" \
        ONLY_ACTIVE_ARCH=YES | xcpretty
else
    xcodebuild build \
        -project "$PROJECT" \
        -scheme "$SCHEME" \
        -destination "platform=iOS Simulator,name=$SIMULATOR,OS=$OS_VERSION" \
        -configuration Debug \
        CODE_SIGNING_REQUIRED=NO \
        CODE_SIGN_IDENTITY="" \
        ONLY_ACTIVE_ARCH=YES \
        -quiet
fi

check_status "–°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

# 3. –ó–∞–ø—É—Å–∫ —Å–∏–º—É–ª—è—Ç–æ—Ä–∞
echo "üì± –ó–∞–ø—É—Å–∫ —Å–∏–º—É–ª—è—Ç–æ—Ä–∞..."

# –ü–æ–ª—É—á–∞–µ–º ID —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
DEVICE_ID=$(xcrun simctl list devices | grep "$SIMULATOR" | grep -oE "[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}" | head -1)

if [ -z "$DEVICE_ID" ]; then
    echo "   –°–æ–∑–¥–∞—é –Ω–æ–≤—ã–π —Å–∏–º—É–ª—è—Ç–æ—Ä..."
    DEVICE_ID=$(xcrun simctl create "$SIMULATOR" "com.apple.CoreSimulator.SimDeviceType.iPhone-16-Pro" "com.apple.CoreSimulator.SimRuntime.iOS-18-5")
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–º—É–ª—è—Ç–æ—Ä –µ—Å–ª–∏ –Ω–µ –∑–∞–ø—É—â–µ–Ω
xcrun simctl boot "$DEVICE_ID" 2>/dev/null || true
open -a Simulator

# –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∏–º—É–ª—è—Ç–æ—Ä–∞
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∏–º—É–ª—è—Ç–æ—Ä–∞..."
while [ "$(xcrun simctl list devices | grep "$DEVICE_ID" | grep -c Booted)" -eq 0 ]; do
    sleep 1
done
sleep 3

# 4. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo "üì≤ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ —Å–∏–º—É–ª—è—Ç–æ—Ä..."
APP_PATH=$(find ~/Library/Developer/Xcode/DerivedData/LMS-*/Build/Products/Debug-iphonesimulator -name "LMS.app" | head -1)

if [ -z "$APP_PATH" ]; then
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Å–æ–±—Ä–∞–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
    exit 1
fi

xcrun simctl install "$DEVICE_ID" "$APP_PATH"
check_status "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"

# 5. –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo "üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
xcrun simctl launch "$DEVICE_ID" ru.tsum.lms.igor
check_status "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ"

echo ""
echo "‚úÖ –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–æ!"
echo ""
echo "üìù –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: xcrun simctl launch $DEVICE_ID ru.tsum.lms.igor"
echo "  - –£–¥–∞–ª–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: xcrun simctl uninstall $DEVICE_ID ru.tsum.lms.igor"
echo "  - –°–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç: xcrun simctl io $DEVICE_ID screenshot screenshot.png"
echo "  - –ó–∞–ø–∏—Å–∞—Ç—å –≤–∏–¥–µ–æ: xcrun simctl io $DEVICE_ID recordVideo video.mov"
echo ""

# 6. –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –∑–∞–ø—É—Å–∫ UI —Ç–µ—Å—Ç–æ–≤
read -p "–ó–∞–ø—É—Å—Ç–∏—Ç—å UI —Ç–µ—Å—Ç—ã? (y/n): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo "üß™ –ó–∞–ø—É—Å–∫ UI —Ç–µ—Å—Ç–æ–≤..."
    if command -v xcpretty &> /dev/null; then
        xcodebuild test \
            -project "$PROJECT" \
            -scheme "$SCHEME" \
            -destination "platform=iOS Simulator,id=$DEVICE_ID" \
            -only-testing:LMSUITests \
            | xcpretty
    else
        xcodebuild test \
            -project "$PROJECT" \
            -scheme "$SCHEME" \
            -destination "platform=iOS Simulator,id=$DEVICE_ID" \
            -only-testing:LMSUITests \
            -quiet
    fi
fi

# –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: —É—Å—Ç–∞–Ω–æ–≤–∫–∞ xcpretty
if ! command -v xcpretty &> /dev/null; then
    echo ""
    echo "üí° –°–æ–≤–µ—Ç: —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ xcpretty –¥–ª—è –ª—É—á—à–µ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—ã–≤–æ–¥–∞:"
    echo "   gem install xcpretty"
fi 