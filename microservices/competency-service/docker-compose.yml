version: '3.8'

services:
  competency-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: competency-service
    restart: unless-stopped
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=competency_db
      - DB_USER=competency_user
      - DB_PASSWORD=competency_pass
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASS=guest
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - competency-network
    volumes:
      - ./src:/app/src
      - ./config:/app/config

  nginx:
    image: nginx:alpine
    container_name: competency-nginx
    restart: unless-stopped
    ports:
      - "8003:80"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - competency-service
    networks:
      - competency-network

  postgres:
    image: postgres:15-alpine
    container_name: competency-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=competency_db
      - POSTGRES_USER=competency_user
      - POSTGRES_PASSWORD=competency_pass
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./database/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"
    networks:
      - competency-network

  redis:
    image: redis:7-alpine
    container_name: competency-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - competency-network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: competency-rabbitmq
    restart: unless-stopped
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "15673:15672"  # Management UI
      - "5673:5672"     # AMQP port
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - competency-network

volumes:
  postgres-data:
  redis-data:
  rabbitmq-data:

networks:
  competency-network:
    driver: bridge 