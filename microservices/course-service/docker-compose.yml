version: '3.8'

services:
  course-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: lms-course-service
    restart: unless-stopped
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DATABASE_URL=postgresql://lms_user:lms_pass@postgres:5432/lms_courses
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
    volumes:
      - ./logs:/app/var/log
    networks:
      - lms-network
    depends_on:
      - postgres
      - redis
      - rabbitmq
      
  nginx:
    image: nginx:alpine
    container_name: lms-course-nginx
    restart: unless-stopped
    ports:
      - "8001:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./public:/app/public:ro
    networks:
      - lms-network
    depends_on:
      - course-service
      
  postgres:
    image: postgres:15-alpine
    container_name: lms-course-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=lms_courses
      - POSTGRES_USER=lms_user
      - POSTGRES_PASSWORD=lms_pass
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./database/migrations:/docker-entrypoint-initdb.d
    networks:
      - lms-network
      
  redis:
    image: redis:7-alpine
    container_name: lms-course-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - lms-network
      
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: lms-course-rabbitmq
    restart: unless-stopped
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    ports:
      - "15672:15672" # Management UI
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - lms-network

networks:
  lms-network:
    driver: bridge
    
volumes:
  postgres-data:
  redis-data:
  rabbitmq-data: 